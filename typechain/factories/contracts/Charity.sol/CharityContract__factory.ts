/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CharityContract,
  CharityContractInterface,
} from "../../../contracts/Charity.sol/CharityContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDonation",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSumOfDonations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendHelp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061098e806100606000396000f3fe6080604052600436106100745760003560e01c8063bf1482fa1161004e578063bf1482fa14610167578063cc6cb19a14610192578063ed88c68e146101cf578063f3a01489146101d9576100d1565b80636f965a63146100d65780638da5cb5b146100ff578063ac62f5661461012a576100d1565b366100d157610081610204565b3373ffffffffffffffffffffffffffffffffffffffff167f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c52346040516100c79190610630565b60405180910390a2005b600080fd5b3480156100e257600080fd5b506100fd60048036038101906100f891906106da565b610307565b005b34801561010b57600080fd5b50610114610411565b6040516101219190610729565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190610744565b610435565b60405161015e9190610729565b60405180910390f35b34801561017357600080fd5b5061017c610474565b604051610189919061082f565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b49190610851565b610502565b6040516101c69190610630565b60405180910390f35b6101d761051a565b005b3480156101e557600080fd5b506101ee61055e565b6040516101fb9190610630565b60405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036102af576002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102fe91906108ad565b92505081905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038c576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156103c6576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561040c573d6000803e3d6000fd5b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061044557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060028054806020026020016040519081016040528092919081815260200182805480156104f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104ae575b5050505050905090565b60016020528060005260406000206000915090505481565b60003403610554576040517fed0a901a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61055c610204565b565b60008060005b60028054905081101561060f576001600060028381548110610589576105886108e1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826105fa91906108ad565b9150808061060790610910565b915050610564565b508091505090565b6000819050919050565b61062a81610617565b82525050565b60006020820190506106456000830184610621565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067b82610650565b9050919050565b61068b81610670565b811461069657600080fd5b50565b6000813590506106a881610682565b92915050565b6106b781610617565b81146106c257600080fd5b50565b6000813590506106d4816106ae565b92915050565b600080604083850312156106f1576106f061064b565b5b60006106ff85828601610699565b9250506020610710858286016106c5565b9150509250929050565b61072381610670565b82525050565b600060208201905061073e600083018461071a565b92915050565b60006020828403121561075a5761075961064b565b5b6000610768848285016106c5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107a681610670565b82525050565b60006107b8838361079d565b60208301905092915050565b6000602082019050919050565b60006107dc82610771565b6107e6818561077c565b93506107f18361078d565b8060005b8381101561082257815161080988826107ac565b9750610814836107c4565b9250506001810190506107f5565b5085935050505092915050565b6000602082019050818103600083015261084981846107d1565b905092915050565b6000602082840312156108675761086661064b565b5b600061087584828501610699565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108b882610617565b91506108c383610617565b92508282019050808211156108db576108da61087e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061091b82610617565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361094d5761094c61087e565b5b60018201905091905056fea26469706673582212209bca92b2139a4561fa0f5af51161155f38c21027f38f8796ea22dc64a398009364736f6c63430008120033";

type CharityContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CharityContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CharityContract__factory extends ContractFactory {
  constructor(...args: CharityContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CharityContract> {
    return super.deploy(overrides || {}) as Promise<CharityContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CharityContract {
    return super.attach(address) as CharityContract;
  }
  override connect(signer: Signer): CharityContract__factory {
    return super.connect(signer) as CharityContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CharityContractInterface {
    return new utils.Interface(_abi) as CharityContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CharityContract {
    return new Contract(address, _abi, signerOrProvider) as CharityContract;
  }
}
