/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CharityContract,
  CharityContractInterface,
} from "../../../contracts/Charity.sol/CharityContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDonation",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSumOfDonations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendHelp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002b675176a59bf0770de560c01b61008a60201b60201c565b610045679ff21461f6fd8b1460c01b61008a60201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008d565b50565b610cdf8061009c6000396000f3fe6080604052600436106100745760003560e01c8063bf1482fa1161004e578063bf1482fa1461018f578063cc6cb19a146101ba578063ed88c68e146101f7578063f3a0148914610201576100f9565b80636f965a63146100fe5780638da5cb5b14610127578063ac62f56614610152576100f9565b366100f95761008d6705de39c538d8925c60c01b61022c565b61009561022f565b6100a967748bc896b3e0d9bf60c01b61022c565b3373ffffffffffffffffffffffffffffffffffffffff167f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c52346040516100ef9190610981565b60405180910390a2005b600080fd5b34801561010a57600080fd5b5061012560048036038101906101209190610a2b565b6103d7565b005b34801561013357600080fd5b5061013c6105e5565b6040516101499190610a7a565b60405180910390f35b34801561015e57600080fd5b5061017960048036038101906101749190610a95565b610609565b6040516101869190610a7a565b60405180910390f35b34801561019b57600080fd5b506101a4610648565b6040516101b19190610b80565b60405180910390f35b3480156101c657600080fd5b506101e160048036038101906101dc9190610ba2565b610712565b6040516101ee9190610981565b60405180910390f35b6101ff61072a565b005b34801561020d57600080fd5b5061021661080e565b6040516102239190610981565b60405180910390f35b50565b610243675ef4224db416ba4a60c01b61022c565b610257675dbbdb4905fae77360c01b61022c565b61026b67a158fb51ed89ef7160c01b61022c565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610356576102c66773d3d4f48fef85d660c01b61022c565b6102da679802f9f9ea8fc9a160c01b61022c565b6102ee673b720eab5d1e249b60c01b61022c565b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061036b565b61036a672e4ae64b33910a3a60c01b61022c565b5b61037f6728e7c7dcb421d69560c01b61022c565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103ce9190610bfe565b92505081905550565b6103eb67733b421af89ccf4b60c01b61022c565b6103ff67e717283e91c6ee6d60c01b61022c565b61041367dc74e9c889f6f15560c01b61022c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c05761047a6780be2ddbee0918ce60c01b61022c565b61048e67f00ff1ccf2c0113d60c01b61022c565b6040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104d46731e17fe5fb555e7c60c01b61022c565b6104e86779d5caacfd521d7560c01b61022c565b6104fc671e26fdb54620207260c01b61022c565b4781111561055e57610518679e973a6d7f4ba2b460c01b61022c565b61052c67e8c11e389dbcfa4b60c01b61022c565b6040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610572679879c3218aed1fbd60c01b61022c565b61058667707c428d2ae5e7bf60c01b61022c565b61059a67d302e45a8d4c6a6660c01b61022c565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105e0573d6000803e3d6000fd5b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061061957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606061065e67cb9a1393c5d00bd960c01b61022c565b610672679e9d9a3c527b060160c01b61022c565b61068667971610f7a2172a5860c01b61022c565b600280548060200260200160405190810160405280929190818152602001828054801561070857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106be575b5050505050905090565b60016020528060005260406000206000915090505481565b61073e67a2625b05d9d69fd860c01b61022c565b61075267098575af9d5d5df760c01b61022c565b61076667922044674a46409b60c01b61022c565b600034036107c85761078267d18d745f6e00f14160c01b61022c565b6107966717f388bc6f0c582b60c01b61022c565b6040517fed0a901a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107dc67be310d37c6e7fb8f60c01b61022c565b6107f067b9900b0cbc3f6bed60c01b61022c565b61080467f378c3d6bb605f0c60c01b61022c565b61080c61022f565b565b6000610824679cfddce75eaa9f9e60c01b61022c565b61083867207c524e9276275460c01b61022c565b61084c67ce5e3672b393de1460c01b61022c565b6000610862674b759060d2ca90f060c01b61022c565b610876670d246675c8cd986760c01b61022c565b60005b6002805490508110156109385761089a674ce8cc0042e978d160c01b61022c565b60016000600283815481106108b2576108b1610c32565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826109239190610bfe565b9150808061093090610c61565b915050610879565b5061094d67a018ff918ba622b060c01b61022c565b6109616744d7c71d76128ab760c01b61022c565b8091505090565b6000819050919050565b61097b81610968565b82525050565b60006020820190506109966000830184610972565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109cc826109a1565b9050919050565b6109dc816109c1565b81146109e757600080fd5b50565b6000813590506109f9816109d3565b92915050565b610a0881610968565b8114610a1357600080fd5b50565b600081359050610a25816109ff565b92915050565b60008060408385031215610a4257610a4161099c565b5b6000610a50858286016109ea565b9250506020610a6185828601610a16565b9150509250929050565b610a74816109c1565b82525050565b6000602082019050610a8f6000830184610a6b565b92915050565b600060208284031215610aab57610aaa61099c565b5b6000610ab984828501610a16565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610af7816109c1565b82525050565b6000610b098383610aee565b60208301905092915050565b6000602082019050919050565b6000610b2d82610ac2565b610b378185610acd565b9350610b4283610ade565b8060005b83811015610b73578151610b5a8882610afd565b9750610b6583610b15565b925050600181019050610b46565b5085935050505092915050565b60006020820190508181036000830152610b9a8184610b22565b905092915050565b600060208284031215610bb857610bb761099c565b5b6000610bc6848285016109ea565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c0982610968565b9150610c1483610968565b9250828201905080821115610c2c57610c2b610bcf565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c6c82610968565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9e57610c9d610bcf565b5b60018201905091905056fea26469706673582212201a53c519a6bd77164e24332c943530286a9ed81401a4e1bc276b407c3802594964736f6c63430008120033";

type CharityContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CharityContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CharityContract__factory extends ContractFactory {
  constructor(...args: CharityContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CharityContract> {
    return super.deploy(overrides || {}) as Promise<CharityContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CharityContract {
    return super.attach(address) as CharityContract;
  }
  override connect(signer: Signer): CharityContract__factory {
    return super.connect(signer) as CharityContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CharityContractInterface {
    return new utils.Interface(_abi) as CharityContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CharityContract {
    return new Contract(address, _abi, signerOrProvider) as CharityContract;
  }
}
