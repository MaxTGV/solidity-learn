/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DexAdapter,
  DexAdapterInterface,
} from "../../contracts/DexAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_positionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "IdenticalAddressesError",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowanceError",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMintAmountsError",
    type: "error",
  },
  {
    inputs: [],
    name: "MintFailedError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "FeesCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "LiquidityDecrease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "LiquidityIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "PositionMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "SwapSuccess",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "_sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "collectAllFees",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "decreaseLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAdd0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAdd1",
        type: "uint256",
      },
    ],
    name: "increaseLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "poolFee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amount0ToMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1ToMint",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "minTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "maxTick",
        type: "int24",
      },
    ],
    name: "mintNewPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMinimum",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "swapExactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMaximum",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "swapExactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003574380380620035748339818101604052810190620000379190620001de565b6200005367ffc6c270869082d860c01b6200017160201b60201c565b6200006f6764189f79a0b9cf1160c01b6200017160201b60201c565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cb6756afefab0420c7e660c01b6200017160201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200012867e8f2e69c8aabbb3160c01b6200017160201b60201c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000225565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a68262000179565b9050919050565b620001b88162000199565b8114620001c457600080fd5b50565b600081519050620001d881620001ad565b92915050565b60008060408385031215620001f857620001f762000174565b5b60006200020885828601620001c7565b92505060206200021b85828601620001c7565b9150509250929050565b61333f80620002356000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806399fbab881161007157806399fbab8814610191578063aa081875146101c4578063c31c9c07146101f4578063d54a371814610212578063e115bc5c14610243578063f1421a0e14610275576100a9565b8063120cdc21146100ae57806346ce96dd146100e1578063791b98bc146101125780638e909e511461013057806399d7b59414610160575b600080fd5b6100c860048036038101906100c39190612311565b6102a5565b6040516100d894939291906123ed565b60405180910390f35b6100fb60048036038101906100f69190612432565b6107e1565b60405161010992919061245f565b60405180910390f35b61011a610b04565b60405161012791906124e7565b60405180910390f35b61014a6004803603810190610145919061252e565b610b28565b60405161015791906125a4565b60405180910390f35b61017a600480360381019061017591906125eb565b610db1565b60405161018892919061245f565b60405180910390f35b6101ab60048036038101906101a69190612432565b6110d9565b6040516101bb949392919061262b565b60405180910390f35b6101de60048036038101906101d991906127b6565b611185565b6040516101eb9190612839565b60405180910390f35b6101fc611489565b6040516102099190612875565b60405180910390f35b61022c60048036038101906102279190612890565b6114af565b60405161023a9291906128d0565b60405180910390f35b61025d600480360381019061025891906128f9565b611636565b60405161026c9392919061294c565b60405180910390f35b61028f600480360381019061028a91906127b6565b611b43565b60405161029c9190612839565b60405180910390f35b6000806000806102bf676e44bab24e3782f060c01b611e47565b6102d367866788b9082dd64860c01b611e47565b6102e7672b9c0112eef8aef560c01b611e47565b6000806102f48d8d6114af565b9150915061030c67c4075e3d71d3840460c01b611e47565b610320671b56e0dcc37f478b60c01b611e47565b61032c8233308d611e4a565b610340679d32f6f8fa0fc5ad60c01b611e47565b61035467b17fb29541a3b44f60c01b611e47565b6103608133308c611e4a565b610374677cdf855d513f7bf860c01b611e47565b610388670f88897316298b0560c01b611e47565b6103b38260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168c611fa2565b6103c7675e5c3d68c1c78f9360c01b611e47565b6103db670ebd867edc18ef8460c01b611e47565b6104068160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b611fa2565b61041a6727857a3f1873f68760c01b611e47565b61042e67f7c4e926ff5cd3bd60c01b611e47565b60006040518061016001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018d62ffffff1681526020018a60020b81526020018960020b81526020018c81526020018b815260200160008152602001600081526020013073ffffffffffffffffffffffffffffffffffffffff1681526020014281525090506104e16707acc3eb201ebe4460c01b611e47565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388316456826040518263ffffffff1660e01b815260040161053a9190612aa0565b6080604051808303816000875af1158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d9190612ae6565b809750819850829950839a50505050506105a167ff177d02148c742660c01b611e47565b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001876fffffffffffffffffffffffffffffffff168152506003600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509050506107546751cc378cac283e8d60c01b611e47565b610768670f4d68b874c9732260c01b611e47565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16887fa18d2d190be671792194a53a32cbe6fce8fe79179bef44ce539d316174755b92858a6040516107c8929190612b4d565b60405180910390a4505050975097509750979350505050565b6000806107f8679c2e315e2ae42e4c60c01b611e47565b61080c67f12ff6fb28f7100460c01b611e47565b610820676da11d3d78b05f6460c01b611e47565b3373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108e35761089d67370fa2131aa6feb360c01b611e47565b6108b1670aa64b06bc6d97cb60c01b611e47565b6040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f7677e966e662491377d60c01b611e47565b61090b67f7666c0377b8e0f360c01b611e47565b61091f67ef58f212fa788fe260c01b611e47565b600060405180608001604052808581526020016003600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016fffffffffffffffffffffffffffffffff801681526020016fffffffffffffffffffffffffffffffff801681525090506109c8673a3af50f6bc5b22a60c01b611e47565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc6f7865826040518263ffffffff1660e01b8152600401610a219190612bda565b60408051808303816000875af1158015610a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a639190612bf5565b8093508194505050610a7f67175d545e35c0a85060c01b611e47565b610a93679e7d8312ae0e61f560c01b611e47565b610a9d83836120f7565b610ab16775e5f5b6735767fe60c01b611e47565b610ac567a9f77d685888fec560c01b611e47565b7f49d512bf9cb224241c05691e73eb9fab078cf350c7dbcbcf66788f1fc0cc8b0b8383604051610af692919061245f565b60405180910390a150915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610b3e67098d697bb9c151d760c01b611e47565b610b526776bea07bea5d6ecd60c01b611e47565b610b6667867ba8111d0f313e60c01b611e47565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c1557610bcf67d6c4fc2adab7a51e60c01b611e47565b610be367f461fb879a6882cd60c01b611e47565b6040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c2967a0217e984f7bf09260c01b611e47565b610c3d675b87fb5d4eaf947e60c01b611e47565b610c516795bc5bcd921b0bac60c01b611e47565b600080610c5e87876114af565b91509150610c7667c5702319d3a1d2ef60c01b611e47565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166313ead562838388886040518563ffffffff1660e01b8152600401610cd59493929190612c53565b6020604051808303816000875af1158015610cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d189190612cad565b9250610d2e671ac179f2cdee02c560c01b611e47565b610d426748b07bbb1b1a5dc160c01b611e47565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b85604051610d9f91906125a4565b60405180910390a35050949350505050565b600080610dc867db7ba4488040d46f60c01b611e47565b610ddc67e084620d0523314660c01b611e47565b610df06777859fd167dcc9f860c01b611e47565b3373ffffffffffffffffffffffffffffffffffffffff166003600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610eb357610e6d67271538b8ebb74c7360c01b611e47565b610e81675750718c46bd470860c01b611e47565b6040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ec7674f0c26750eed4bf660c01b611e47565b610edb67cc168c68f2fb081260c01b611e47565b610eef67a284ea64585766f260c01b611e47565b60006040518060a00160405280868152602001856fffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001428152509050610f4267cac8a67c3ce64c5e60c01b611e47565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c49ccbe826040518263ffffffff1660e01b8152600401610f9b9190612d42565b60408051808303816000875af1158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd9190612bf5565b8093508194505050610ff967a2af051faea89bd360c01b611e47565b836003600087815260200190815260200160002060030160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661103a9190612d8c565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061108467787986417f7518ab60c01b611e47565b6110986789b57d7205b81cbb60c01b611e47565b7f66f3cb02371468253bae66022df44c107a961d4c0cb135c9d6af34259b98442383836040516110c992919061245f565b60405180910390a1509250929050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a90046fffffffffffffffffffffffffffffffff16905084565b600061119b67fdbd3535c7c24e8960c01b611e47565b6111af67e05270df713d7bdb60c01b611e47565b6111c367577e6a475bf00d6f60c01b611e47565b838573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016111ff9291906128d0565b602060405180830381865afa15801561121c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112409190612dd0565b10156112a05761125a670eb850e17f2956a960c01b611e47565b61126e67ae5b0b11f49c2da760c01b611e47565b6040517f73a74a7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112b467e92274556cecac4f60c01b611e47565b6112c867cb2842adfb58ce9260c01b611e47565b6112dc676c88842c520b950160c01b611e47565b6112e885333086611e4a565b6112fc67ca5254cd92c517ba60c01b611e47565b6113106729d87a84846bcb8760c01b611e47565b61133d85600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611fa2565b611351673c893cda12befd6260c01b611e47565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f28c04986040518060a001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001868152506040518263ffffffff1660e01b81526004016113e89190612ef2565b6020604051808303816000875af1158015611407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142b9190612dd0565b90506114416785f2ce680f191e8560c01b611e47565b61145567c95cc8cc1fb3ed0e60c01b611e47565b7f83ae5d684d4bb83a2df3011813d52adafdf58ac5223cc62c5bb8a773e95328b660405160405180910390a1949350505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806114c6677d2b84521d889abd60c01b611e47565b6114da6722cc5a8788a9340f60c01b611e47565b6114ee67e217c6b7b4f56e9a60c01b611e47565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361157b5761153567c0ac75a79e4c02f060c01b611e47565b61154967fefbcbac7cb3e38c60c01b611e47565b6040517f19b1bdc800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61158f67ebffbfe39937a8b460c01b611e47565b6115a367d8fcdf380fee808860c01b611e47565b6115b767ead0e3e7a8740e0660c01b611e47565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610801561160257506116016736a10c40d8e9ebaf60c01b612193565b5b8061161d575061161c67a72d6f927f7c142560c01b61219e565b5b61162857828461162b565b83835b915091509250929050565b600080600061164f672421b1b1dd90ca4b60c01b611e47565b6116636745b214090aa939e060c01b611e47565b61167767a1865886e452b97c60c01b611e47565b3373ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461173a576116f4671e9fd45c8a363a8660c01b611e47565b61170867d0319685652f330960c01b611e47565b6040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61174e67907ae69fe192cfb960c01b611e47565b61176267c90b7cc39430c6db60c01b611e47565b61177667ee6b17de801fd82a60c01b611e47565b6117b86003600088815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333088611e4a565b6117cc6730a9c435f521539260c01b611e47565b6117e06738890a67119b655160c01b611e47565b6118226003600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333087611e4a565b6118366717a2d8f5f9f6cac660c01b611e47565b61184a67a9aeec39021c6b9e60c01b611e47565b6118ab6003600088815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687611fa2565b6118bf67da7d9c740a65118860c01b611e47565b6118d367f7cef18b1726170560c01b611e47565b6119346003600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686611fa2565b611948670a6bc094dd6c40c960c01b611e47565b61195c67b82a092f6424144360c01b611e47565b60006040518060c0016040528088815260200187815260200186815260200160008152602001600081526020014281525090506119a3674c3d63d9d96612a460c01b611e47565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663219f5d17826040518263ffffffff1660e01b81526004016119fc9190612f8f565b6060604051808303816000875af1158015611a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3f9190612faa565b809450819550829650505050611a5f679124778b2abdc83660c01b611e47565b836003600089815260200190815260200160002060030160008282829054906101000a90046fffffffffffffffffffffffffffffffff16611aa09190612ffd565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550611aea67b3d7ed64a1f398c160c01b611e47565b611afe677bc4b5ccfd2b5c1960c01b611e47565b7f782713d3eac7cc9f07a7af8436ba5fb4359365b8673dc0d2c318faeb1d0bbdaa848484604051611b319392919061294c565b60405180910390a15093509350939050565b6000611b5967b1798b0d071d06df60c01b611e47565b611b6d67ac39d924397ee4c160c01b611e47565b611b81670de8ab4876e92da260c01b611e47565b838573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611bbd9291906128d0565b602060405180830381865afa158015611bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bfe9190612dd0565b1015611c5e57611c1867d8f4e92fdd93366060c01b611e47565b611c2c67b43f921193c1426260c01b611e47565b6040517f73a74a7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c7267ac5799679f45884260c01b611e47565b611c8667ea3fc143e82269d960c01b611e47565b611c9a6729700538a9f0a83b60c01b611e47565b611ca685333087611e4a565b611cba67802e2fed21d1cd9160c01b611e47565b611cce67b2641b70d405464d60c01b611e47565b611cfb85600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686611fa2565b611d0f67d9a76be5b27b009360c01b611e47565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04b8d596040518060a001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001868152506040518263ffffffff1660e01b8152600401611da691906130b7565b6020604051808303816000875af1158015611dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de99190612dd0565b9050611dff67eef6f2cd85bcd3cf60c01b611e47565b611e136746ec0e5e576f70e560c01b611e47565b7f83ae5d684d4bb83a2df3011813d52adafdf58ac5223cc62c5bb8a773e95328b660405160405180910390a1949350505050565b50565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401611e81939291906130d9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611eeb919061314c565b6000604051808303816000865af19150503d8060008114611f28576040519150601f19603f3d011682016040523d82523d6000602084013e611f2d565b606091505b5091509150818015611f5b5750600081511480611f5a575080806020019051810190611f59919061319b565b5b5b611f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9190613225565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401611fd7929190613245565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051612041919061314c565b6000604051808303816000865af19150503d806000811461207e576040519150601f19603f3d011682016040523d82523d6000602084013e612083565b606091505b50915091508180156120b157506000815114806120b05750808060200190518101906120af919061319b565b5b5b6120f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120e7906132ba565b60405180910390fd5b5050505050565b61218f828260405160240161210d92919061245f565b6040516020818303038152906040527ff666715a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121a5565b5050565b600060019050919050565b6000919050565b6121bc816121b46121bf6121e0565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6121eb819050919050565b6121f36132da565b565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061223482612209565b9050919050565b61224481612229565b811461224f57600080fd5b50565b6000813590506122618161223b565b92915050565b600062ffffff82169050919050565b61227f81612267565b811461228a57600080fd5b50565b60008135905061229c81612276565b92915050565b6000819050919050565b6122b5816122a2565b81146122c057600080fd5b50565b6000813590506122d2816122ac565b92915050565b60008160020b9050919050565b6122ee816122d8565b81146122f957600080fd5b50565b60008135905061230b816122e5565b92915050565b600080600080600080600060e0888a0312156123305761232f6121ff565b5b600061233e8a828b01612252565b975050602061234f8a828b01612252565b96505060406123608a828b0161228d565b95505060606123718a828b016122c3565b94505060806123828a828b016122c3565b93505060a06123938a828b016122fc565b92505060c06123a48a828b016122fc565b91505092959891949750929550565b6123bc816122a2565b82525050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6123e7816123c2565b82525050565b600060808201905061240260008301876123b3565b61240f60208301866123de565b61241c60408301856123b3565b61242960608301846123b3565b95945050505050565b600060208284031215612448576124476121ff565b5b6000612456848285016122c3565b91505092915050565b600060408201905061247460008301856123b3565b61248160208301846123b3565b9392505050565b6000819050919050565b60006124ad6124a86124a384612209565b612488565b612209565b9050919050565b60006124bf82612492565b9050919050565b60006124d1826124b4565b9050919050565b6124e1816124c6565b82525050565b60006020820190506124fc60008301846124d8565b92915050565b61250b81612209565b811461251657600080fd5b50565b60008135905061252881612502565b92915050565b60008060008060808587031215612548576125476121ff565b5b600061255687828801612252565b945050602061256787828801612252565b93505060406125788782880161228d565b925050606061258987828801612519565b91505092959194509250565b61259e81612229565b82525050565b60006020820190506125b96000830184612595565b92915050565b6125c8816123c2565b81146125d357600080fd5b50565b6000813590506125e5816125bf565b92915050565b60008060408385031215612602576126016121ff565b5b6000612610858286016122c3565b9250506020612621858286016125d6565b9150509250929050565b60006080820190506126406000830187612595565b61264d6020830186612595565b61265a6040830185612595565b61266760608301846123de565b95945050505050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126c38261267a565b810181811067ffffffffffffffff821117156126e2576126e161268b565b5b80604052505050565b60006126f56121f5565b905061270182826126ba565b919050565b600067ffffffffffffffff8211156127215761272061268b565b5b61272a8261267a565b9050602081019050919050565b82818337600083830152505050565b600061275961275484612706565b6126eb565b90508281526020810184848401111561277557612774612675565b5b612780848285612737565b509392505050565b600082601f83011261279d5761279c612670565b5b81356127ad848260208601612746565b91505092915050565b600080600080608085870312156127d0576127cf6121ff565b5b60006127de87828801612252565b94505060206127ef878288016122c3565b9350506040612800878288016122c3565b925050606085013567ffffffffffffffff81111561282157612820612204565b5b61282d87828801612788565b91505092959194509250565b600060208201905061284e60008301846123b3565b92915050565b600061285f826124b4565b9050919050565b61286f81612854565b82525050565b600060208201905061288a6000830184612866565b92915050565b600080604083850312156128a7576128a66121ff565b5b60006128b585828601612252565b92505060206128c685828601612252565b9150509250929050565b60006040820190506128e56000830185612595565b6128f26020830184612595565b9392505050565b600080600060608486031215612912576129116121ff565b5b6000612920868287016122c3565b9350506020612931868287016122c3565b9250506040612942868287016122c3565b9150509250925092565b600060608201905061296160008301866123de565b61296e60208301856123b3565b61297b60408301846123b3565b949350505050565b61298c81612229565b82525050565b61299b81612267565b82525050565b6129aa816122d8565b82525050565b6129b9816122a2565b82525050565b610160820160008201516129d66000850182612983565b5060208201516129e96020850182612983565b5060408201516129fc6040850182612992565b506060820151612a0f60608501826129a1565b506080820151612a2260808501826129a1565b5060a0820151612a3560a08501826129b0565b5060c0820151612a4860c08501826129b0565b5060e0820151612a5b60e08501826129b0565b50610100820151612a706101008501826129b0565b50610120820151612a85610120850182612983565b50610140820151612a9a6101408501826129b0565b50505050565b600061016082019050612ab660008301846129bf565b92915050565b600081519050612acb816122ac565b92915050565b600081519050612ae0816125bf565b92915050565b60008060008060808587031215612b0057612aff6121ff565b5b6000612b0e87828801612abc565b9450506020612b1f87828801612ad1565b9350506040612b3087828801612abc565b9250506060612b4187828801612abc565b91505092959194509250565b6000604082019050612b626000830185612595565b612b6f60208301846123de565b9392505050565b612b7f816123c2565b82525050565b608082016000820151612b9b60008501826129b0565b506020820151612bae6020850182612983565b506040820151612bc16040850182612b76565b506060820151612bd46060850182612b76565b50505050565b6000608082019050612bef6000830184612b85565b92915050565b60008060408385031215612c0c57612c0b6121ff565b5b6000612c1a85828601612abc565b9250506020612c2b85828601612abc565b9150509250929050565b612c3e81612267565b82525050565b612c4d81612209565b82525050565b6000608082019050612c686000830187612595565b612c756020830186612595565b612c826040830185612c35565b612c8f6060830184612c44565b95945050505050565b600081519050612ca78161223b565b92915050565b600060208284031215612cc357612cc26121ff565b5b6000612cd184828501612c98565b91505092915050565b60a082016000820151612cf060008501826129b0565b506020820151612d036020850182612b76565b506040820151612d1660408501826129b0565b506060820151612d2960608501826129b0565b506080820151612d3c60808501826129b0565b50505050565b600060a082019050612d576000830184612cda565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612d97826123c2565b9150612da2836123c2565b925082820390506fffffffffffffffffffffffffffffffff811115612dca57612dc9612d5d565b5b92915050565b600060208284031215612de657612de56121ff565b5b6000612df484828501612abc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e37578082015181840152602081019050612e1c565b60008484015250505050565b6000612e4e82612dfd565b612e588185612e08565b9350612e68818560208601612e19565b612e718161267a565b840191505092915050565b600060a0830160008301518482036000860152612e998282612e43565b9150506020830151612eae6020860182612983565b506040830151612ec160408601826129b0565b506060830151612ed460608601826129b0565b506080830151612ee760808601826129b0565b508091505092915050565b60006020820190508181036000830152612f0c8184612e7c565b905092915050565b60c082016000820151612f2a60008501826129b0565b506020820151612f3d60208501826129b0565b506040820151612f5060408501826129b0565b506060820151612f6360608501826129b0565b506080820151612f7660808501826129b0565b5060a0820151612f8960a08501826129b0565b50505050565b600060c082019050612fa46000830184612f14565b92915050565b600080600060608486031215612fc357612fc26121ff565b5b6000612fd186828701612ad1565b9350506020612fe286828701612abc565b9250506040612ff386828701612abc565b9150509250925092565b6000613008826123c2565b9150613013836123c2565b925082820190506fffffffffffffffffffffffffffffffff81111561303b5761303a612d5d565b5b92915050565b600060a083016000830151848203600086015261305e8282612e43565b91505060208301516130736020860182612983565b50604083015161308660408601826129b0565b50606083015161309960608601826129b0565b5060808301516130ac60808601826129b0565b508091505092915050565b600060208201905081810360008301526130d18184613041565b905092915050565b60006060820190506130ee6000830186612595565b6130fb6020830185612595565b61310860408301846123b3565b949350505050565b600081905092915050565b600061312682612dfd565b6131308185613110565b9350613140818560208601612e19565b80840191505092915050565b6000613158828461311b565b915081905092915050565b60008115159050919050565b61317881613163565b811461318357600080fd5b50565b6000815190506131958161316f565b92915050565b6000602082840312156131b1576131b06121ff565b5b60006131bf84828501613186565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b600061320f6003836131c8565b915061321a826131d9565b602082019050919050565b6000602082019050818103600083015261323e81613202565b9050919050565b600060408201905061325a6000830185612595565b61326760208301846123b3565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b60006132a46002836131c8565b91506132af8261326e565b602082019050919050565b600060208201905081810360008301526132d381613297565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220ac9c0ed36a8ca731f4af2fb88d5669ee14caede57a90c709b7db27c26e9f6c5264736f6c63430008120033";

type DexAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DexAdapter__factory extends ContractFactory {
  constructor(...args: DexAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _positionManager: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DexAdapter> {
    return super.deploy(
      _positionManager,
      _swapRouter,
      overrides || {}
    ) as Promise<DexAdapter>;
  }
  override getDeployTransaction(
    _positionManager: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _positionManager,
      _swapRouter,
      overrides || {}
    );
  }
  override attach(address: string): DexAdapter {
    return super.attach(address) as DexAdapter;
  }
  override connect(signer: Signer): DexAdapter__factory {
    return super.connect(signer) as DexAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexAdapterInterface {
    return new utils.Interface(_abi) as DexAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DexAdapter {
    return new Contract(address, _abi, signerOrProvider) as DexAdapter;
  }
}
