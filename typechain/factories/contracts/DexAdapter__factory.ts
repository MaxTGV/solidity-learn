/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DexAdapter,
  DexAdapterInterface,
} from "../../contracts/DexAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_positionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "IdenticalAddressesError",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowanceError",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMintAmountsError",
    type: "error",
  },
  {
    inputs: [],
    name: "MintFailedError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "FeesCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "LiquidityDecrease",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "LiquidityIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "PositionMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "SwapSuccess",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "_sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "collectAllFees",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "decreaseLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAdd0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAdd1",
        type: "uint256",
      },
    ],
    name: "increaseLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "poolFee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amount0ToMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1ToMint",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "minTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "maxTick",
        type: "int24",
      },
    ],
    name: "mintNewPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMinimum",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "swapExactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMaximum",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "swapExactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003427380380620034278339818101604052810190620000379190620001de565b620000536790f0f3f1329637c660c01b6200017160201b60201c565b6200006f6735f52aba9caed61b60c01b6200017160201b60201c565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cb673d610405d91fcba660c01b6200017160201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001286722dec0aba7e64e7660c01b6200017160201b60201c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000225565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a68262000179565b9050919050565b620001b88162000199565b8114620001c457600080fd5b50565b600081519050620001d881620001ad565b92915050565b60008060408385031215620001f857620001f762000174565b5b60006200020885828601620001c7565b92505060206200021b85828601620001c7565b9150509250929050565b6131f280620002356000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806399fbab881161007157806399fbab8814610191578063aa081875146101c4578063c31c9c07146101f4578063d54a371814610212578063e115bc5c14610243578063f1421a0e14610275576100a9565b8063120cdc21146100ae57806346ce96dd146100e1578063791b98bc146101125780638e909e511461013057806399d7b59414610160575b600080fd5b6100c860048036038101906100c391906121f3565b6102a5565b6040516100d894939291906122cf565b60405180910390f35b6100fb60048036038101906100f69190612314565b6107e1565b604051610109929190612341565b60405180910390f35b61011a610ad2565b60405161012791906123c9565b60405180910390f35b61014a60048036038101906101459190612410565b610af6565b6040516101579190612486565b60405180910390f35b61017a600480360381019061017591906124cd565b610d7f565b604051610188929190612341565b60405180910390f35b6101ab60048036038101906101a69190612314565b6110a7565b6040516101bb949392919061250d565b60405180910390f35b6101de60048036038101906101d99190612698565b611153565b6040516101eb919061271b565b60405180910390f35b6101fc611457565b6040516102099190612757565b60405180910390f35b61022c60048036038101906102279190612772565b61147d565b60405161023a9291906127b2565b60405180910390f35b61025d600480360381019061025891906127db565b611604565b60405161026c9392919061282e565b60405180910390f35b61028f600480360381019061028a9190612698565b611b11565b60405161029c919061271b565b60405180910390f35b6000806000806102bf6781c4a60925516e9360c01b611e15565b6102d367ac8b971b1dd8639760c01b611e15565b6102e767a4c19d58c3f3f8b960c01b611e15565b6000806102f48d8d61147d565b9150915061030c6756d850503747a38a60c01b611e15565b61032067a1cb08064fccedf460c01b611e15565b61032c8233308d611e18565b61034067e57b0533bf73e23560c01b611e15565b610354676f701295597889ac60c01b611e15565b6103608133308c611e18565b610374677b8bc0aa2452fe1d60c01b611e15565b61038867dfaa312c11c27c5560c01b611e15565b6103b38260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168c611f70565b6103c767713a354a758161d860c01b611e15565b6103db672c6a3b01563636fb60c01b611e15565b6104068160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b611f70565b61041a67c3fb3b440e41935960c01b611e15565b61042e67ea9f1fc8faa1f3ef60c01b611e15565b60006040518061016001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018d62ffffff1681526020018a60020b81526020018960020b81526020018c81526020018b815260200160008152602001600081526020013073ffffffffffffffffffffffffffffffffffffffff1681526020014281525090506104e1674f6475e6199b4bf960c01b611e15565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388316456826040518263ffffffff1660e01b815260040161053a9190612982565b6080604051808303816000875af1158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906129c8565b809750819850829950839a50505050506105a1679bd0ea1d08715de360c01b611e15565b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001876fffffffffffffffffffffffffffffffff168152506003600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555090505061075467eefcf1ce9bf78d3860c01b611e15565b61076867b9fe6ad8b3e83a2560c01b611e15565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16887fa18d2d190be671792194a53a32cbe6fce8fe79179bef44ce539d316174755b92858a6040516107c8929190612a2f565b60405180910390a4505050975097509750979350505050565b6000806107f867bef2c01165bc521960c01b611e15565b61080c67f7a11e3d9ea56d9760c01b611e15565b61082067295feb8d83ca493160c01b611e15565b3373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108e35761089d6764b707c300ffcc4960c01b611e15565b6108b16721f8db8663138b2460c01b611e15565b6040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f767dbddae0b1b78a1dc60c01b611e15565b61090b67acdfdb9cf3836b4160c01b611e15565b61091f6732c6a2fdf2a20e6160c01b611e15565b600060405180608001604052808581526020016003600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016fffffffffffffffffffffffffffffffff801681526020016fffffffffffffffffffffffffffffffff801681525090506109c867cd2143e92c6664eb60c01b611e15565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc6f7865826040518263ffffffff1660e01b8152600401610a219190612abc565b60408051808303816000875af1158015610a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a639190612ad7565b8093508194505050610a7f67b14467bd5c2f658860c01b611e15565b610a93678b67ff4f70cb834b60c01b611e15565b7f49d512bf9cb224241c05691e73eb9fab078cf350c7dbcbcf66788f1fc0cc8b0b8383604051610ac4929190612341565b60405180910390a150915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610b0c678baefe47956c82a860c01b611e15565b610b2067c460805f72f477cc60c01b611e15565b610b346722f4691c9e88510660c01b611e15565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610be357610b9d676cdf1d33803d519b60c01b611e15565b610bb1671e71d64e389781d460c01b611e15565b6040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bf76777f96e9f4834472360c01b611e15565b610c0b67663cb4816a67200d60c01b611e15565b610c1f670dd9f0f313d5c8db60c01b611e15565b600080610c2c878761147d565b91509150610c4467415bf4de961034a260c01b611e15565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166313ead562838388886040518563ffffffff1660e01b8152600401610ca39493929190612b35565b6020604051808303816000875af1158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce69190612b8f565b9250610cfc67e73344d869ae626d60c01b611e15565b610d106718cdf8754db8ce0a60c01b611e15565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b85604051610d6d9190612486565b60405180910390a35050949350505050565b600080610d9667773c5f5091aeacfc60c01b611e15565b610daa67129caa67b0fc8e0b60c01b611e15565b610dbe67ccc5ae46016fa64a60c01b611e15565b3373ffffffffffffffffffffffffffffffffffffffff166003600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e8157610e3b67ee8d4dcfe086a8ee60c01b611e15565b610e4f67921347904859904460c01b611e15565b6040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e95676bcbaa0472df4aef60c01b611e15565b610ea967dedfa083058c0e0a60c01b611e15565b610ebd67cccb18e0dfcfb7af60c01b611e15565b60006040518060a00160405280868152602001856fffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001428152509050610f1067b3e2b3243459b99760c01b611e15565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c49ccbe826040518263ffffffff1660e01b8152600401610f699190612c24565b60408051808303816000875af1158015610f87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fab9190612ad7565b8093508194505050610fc76710286d71497b686160c01b611e15565b836003600087815260200190815260200160002060030160008282829054906101000a90046fffffffffffffffffffffffffffffffff166110089190612c6e565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506110526748936fadb634231260c01b611e15565b61106667137081161c13f4e560c01b611e15565b7f66f3cb02371468253bae66022df44c107a961d4c0cb135c9d6af34259b9844238383604051611097929190612341565b60405180910390a1509250929050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a90046fffffffffffffffffffffffffffffffff16905084565b600061116967fcb8be082b82ce8460c01b611e15565b61117d67865c524125ac488e60c01b611e15565b61119167c8b7da09c4b5267760c01b611e15565b838573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016111cd9291906127b2565b602060405180830381865afa1580156111ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120e9190612cb2565b101561126e57611228679bec4fae13e452cf60c01b611e15565b61123c67d460bdf34a700e6d60c01b611e15565b6040517f73a74a7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112826755b9dc545ccd294a60c01b611e15565b611296675f9d694e519a2c0c60c01b611e15565b6112aa679b5a0b2e606cdb3260c01b611e15565b6112b685333086611e18565b6112ca67d5280c70d52914fb60c01b611e15565b6112de671095d9000671c1a360c01b611e15565b61130b85600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685611f70565b61131f6758b42698ac051c3c60c01b611e15565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f28c04986040518060a001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001868152506040518263ffffffff1660e01b81526004016113b69190612dd4565b6020604051808303816000875af11580156113d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f99190612cb2565b905061140f671cfc1dae3128832360c01b611e15565b6114236782527cf2e9de3d3b60c01b611e15565b7f83ae5d684d4bb83a2df3011813d52adafdf58ac5223cc62c5bb8a773e95328b660405160405180910390a1949350505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080611494677fb8a1cdd6dcde4b60c01b611e15565b6114a8677a4cda9de250eaa860c01b611e15565b6114bc67eb06d60d512a786360c01b611e15565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611549576115036773efc9a2b9a2f51b60c01b611e15565b61151767c12bc2a56707b38c60c01b611e15565b6040517f19b1bdc800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61155d67bf0148b6fa6e4d2660c01b611e15565b6115716793366710ab20437960c01b611e15565b6115856712c1ad88234c5d2160c01b611e15565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161080156115d057506115cf670280c66ed283fdd860c01b6120c5565b5b806115eb57506115ea67823fc9b73135641260c01b6120d0565b5b6115f65782846115f9565b83835b915091509250929050565b600080600061161d67f78fdf9a1a46dcb660c01b611e15565b61163167dab25136da08d52260c01b611e15565b611645674a11d5503b9db6bb60c01b611e15565b3373ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611708576116c267fe51edb2cb72e1b560c01b611e15565b6116d667b70179cf48400d4d60c01b611e15565b6040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61171c67b65ef3f92ba0fe2460c01b611e15565b61173067881f4bf221cd7d1160c01b611e15565b6117446788ec7b3124ca81d760c01b611e15565b6117866003600088815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333088611e18565b61179a6774a83b4a7d70bcf160c01b611e15565b6117ae6763cbb5bbd480d41e60c01b611e15565b6117f06003600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333087611e18565b61180467626a957dae129d0660c01b611e15565b611818672a9697e79c4b7a8b60c01b611e15565b6118796003600088815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687611f70565b61188d67cc6ccf75f660d90360c01b611e15565b6118a167d6f3f03aae07e4b560c01b611e15565b6119026003600088815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686611f70565b611916671b5ee6dfbb92de1a60c01b611e15565b61192a67a0452b6c0975e47b60c01b611e15565b60006040518060c001604052808881526020018781526020018681526020016000815260200160008152602001428152509050611971676fa5b8c4c71e86f260c01b611e15565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663219f5d17826040518263ffffffff1660e01b81526004016119ca9190612e71565b6060604051808303816000875af11580156119e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0d9190612e8c565b809450819550829650505050611a2d671637891b08ae508d60c01b611e15565b836003600089815260200190815260200160002060030160008282829054906101000a90046fffffffffffffffffffffffffffffffff16611a6e9190612edf565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550611ab8677c3a3fdaf298c1c660c01b611e15565b611acc67551243f76b77c08160c01b611e15565b7f782713d3eac7cc9f07a7af8436ba5fb4359365b8673dc0d2c318faeb1d0bbdaa848484604051611aff9392919061282e565b60405180910390a15093509350939050565b6000611b2767720289fb602d7dea60c01b611e15565b611b3b678db5870d3e674df760c01b611e15565b611b4f6738a96cbf9152652160c01b611e15565b838573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611b8b9291906127b2565b602060405180830381865afa158015611ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bcc9190612cb2565b1015611c2c57611be667ffe58f35a436cd5e60c01b611e15565b611bfa677a10e24c030e837b60c01b611e15565b6040517f73a74a7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c40675fdbcd49d172a04560c01b611e15565b611c5467980f477716e1ea9c60c01b611e15565b611c68678a5e11357ec44d0760c01b611e15565b611c7485333087611e18565b611c886773d4c31a74288c8560c01b611e15565b611c9c6783fb7e602be0d4bb60c01b611e15565b611cc985600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686611f70565b611cdd673cf6ac9e6dc6e76460c01b611e15565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04b8d596040518060a001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001868152506040518263ffffffff1660e01b8152600401611d749190612f99565b6020604051808303816000875af1158015611d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db79190612cb2565b9050611dcd673166210cfee3d5bb60c01b611e15565b611de1676314c80718d5989e60c01b611e15565b7f83ae5d684d4bb83a2df3011813d52adafdf58ac5223cc62c5bb8a773e95328b660405160405180910390a1949350505050565b50565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401611e4f93929190612fbb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611eb9919061302e565b6000604051808303816000865af19150503d8060008114611ef6576040519150601f19603f3d011682016040523d82523d6000602084013e611efb565b606091505b5091509150818015611f295750600081511480611f28575080806020019051810190611f27919061307d565b5b5b611f68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5f90613107565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401611fa5929190613127565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161200f919061302e565b6000604051808303816000865af19150503d806000811461204c576040519150601f19603f3d011682016040523d82523d6000602084013e612051565b606091505b509150915081801561207f575060008151148061207e57508080602001905181019061207d919061307d565b5b5b6120be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b59061319c565b60405180910390fd5b5050505050565b600060019050919050565b6000919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612116826120eb565b9050919050565b6121268161210b565b811461213157600080fd5b50565b6000813590506121438161211d565b92915050565b600062ffffff82169050919050565b61216181612149565b811461216c57600080fd5b50565b60008135905061217e81612158565b92915050565b6000819050919050565b61219781612184565b81146121a257600080fd5b50565b6000813590506121b48161218e565b92915050565b60008160020b9050919050565b6121d0816121ba565b81146121db57600080fd5b50565b6000813590506121ed816121c7565b92915050565b600080600080600080600060e0888a031215612212576122116120e1565b5b60006122208a828b01612134565b97505060206122318a828b01612134565b96505060406122428a828b0161216f565b95505060606122538a828b016121a5565b94505060806122648a828b016121a5565b93505060a06122758a828b016121de565b92505060c06122868a828b016121de565b91505092959891949750929550565b61229e81612184565b82525050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6122c9816122a4565b82525050565b60006080820190506122e46000830187612295565b6122f160208301866122c0565b6122fe6040830185612295565b61230b6060830184612295565b95945050505050565b60006020828403121561232a576123296120e1565b5b6000612338848285016121a5565b91505092915050565b60006040820190506123566000830185612295565b6123636020830184612295565b9392505050565b6000819050919050565b600061238f61238a612385846120eb565b61236a565b6120eb565b9050919050565b60006123a182612374565b9050919050565b60006123b382612396565b9050919050565b6123c3816123a8565b82525050565b60006020820190506123de60008301846123ba565b92915050565b6123ed816120eb565b81146123f857600080fd5b50565b60008135905061240a816123e4565b92915050565b6000806000806080858703121561242a576124296120e1565b5b600061243887828801612134565b945050602061244987828801612134565b935050604061245a8782880161216f565b925050606061246b878288016123fb565b91505092959194509250565b6124808161210b565b82525050565b600060208201905061249b6000830184612477565b92915050565b6124aa816122a4565b81146124b557600080fd5b50565b6000813590506124c7816124a1565b92915050565b600080604083850312156124e4576124e36120e1565b5b60006124f2858286016121a5565b9250506020612503858286016124b8565b9150509250929050565b60006080820190506125226000830187612477565b61252f6020830186612477565b61253c6040830185612477565b61254960608301846122c0565b95945050505050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125a58261255c565b810181811067ffffffffffffffff821117156125c4576125c361256d565b5b80604052505050565b60006125d76120d7565b90506125e3828261259c565b919050565b600067ffffffffffffffff8211156126035761260261256d565b5b61260c8261255c565b9050602081019050919050565b82818337600083830152505050565b600061263b612636846125e8565b6125cd565b90508281526020810184848401111561265757612656612557565b5b612662848285612619565b509392505050565b600082601f83011261267f5761267e612552565b5b813561268f848260208601612628565b91505092915050565b600080600080608085870312156126b2576126b16120e1565b5b60006126c087828801612134565b94505060206126d1878288016121a5565b93505060406126e2878288016121a5565b925050606085013567ffffffffffffffff811115612703576127026120e6565b5b61270f8782880161266a565b91505092959194509250565b60006020820190506127306000830184612295565b92915050565b600061274182612396565b9050919050565b61275181612736565b82525050565b600060208201905061276c6000830184612748565b92915050565b60008060408385031215612789576127886120e1565b5b600061279785828601612134565b92505060206127a885828601612134565b9150509250929050565b60006040820190506127c76000830185612477565b6127d46020830184612477565b9392505050565b6000806000606084860312156127f4576127f36120e1565b5b6000612802868287016121a5565b9350506020612813868287016121a5565b9250506040612824868287016121a5565b9150509250925092565b600060608201905061284360008301866122c0565b6128506020830185612295565b61285d6040830184612295565b949350505050565b61286e8161210b565b82525050565b61287d81612149565b82525050565b61288c816121ba565b82525050565b61289b81612184565b82525050565b610160820160008201516128b86000850182612865565b5060208201516128cb6020850182612865565b5060408201516128de6040850182612874565b5060608201516128f16060850182612883565b5060808201516129046080850182612883565b5060a082015161291760a0850182612892565b5060c082015161292a60c0850182612892565b5060e082015161293d60e0850182612892565b50610100820151612952610100850182612892565b50610120820151612967610120850182612865565b5061014082015161297c610140850182612892565b50505050565b60006101608201905061299860008301846128a1565b92915050565b6000815190506129ad8161218e565b92915050565b6000815190506129c2816124a1565b92915050565b600080600080608085870312156129e2576129e16120e1565b5b60006129f08782880161299e565b9450506020612a01878288016129b3565b9350506040612a128782880161299e565b9250506060612a238782880161299e565b91505092959194509250565b6000604082019050612a446000830185612477565b612a5160208301846122c0565b9392505050565b612a61816122a4565b82525050565b608082016000820151612a7d6000850182612892565b506020820151612a906020850182612865565b506040820151612aa36040850182612a58565b506060820151612ab66060850182612a58565b50505050565b6000608082019050612ad16000830184612a67565b92915050565b60008060408385031215612aee57612aed6120e1565b5b6000612afc8582860161299e565b9250506020612b0d8582860161299e565b9150509250929050565b612b2081612149565b82525050565b612b2f816120eb565b82525050565b6000608082019050612b4a6000830187612477565b612b576020830186612477565b612b646040830185612b17565b612b716060830184612b26565b95945050505050565b600081519050612b898161211d565b92915050565b600060208284031215612ba557612ba46120e1565b5b6000612bb384828501612b7a565b91505092915050565b60a082016000820151612bd26000850182612892565b506020820151612be56020850182612a58565b506040820151612bf86040850182612892565b506060820151612c0b6060850182612892565b506080820151612c1e6080850182612892565b50505050565b600060a082019050612c396000830184612bbc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c79826122a4565b9150612c84836122a4565b925082820390506fffffffffffffffffffffffffffffffff811115612cac57612cab612c3f565b5b92915050565b600060208284031215612cc857612cc76120e1565b5b6000612cd68482850161299e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612d19578082015181840152602081019050612cfe565b60008484015250505050565b6000612d3082612cdf565b612d3a8185612cea565b9350612d4a818560208601612cfb565b612d538161255c565b840191505092915050565b600060a0830160008301518482036000860152612d7b8282612d25565b9150506020830151612d906020860182612865565b506040830151612da36040860182612892565b506060830151612db66060860182612892565b506080830151612dc96080860182612892565b508091505092915050565b60006020820190508181036000830152612dee8184612d5e565b905092915050565b60c082016000820151612e0c6000850182612892565b506020820151612e1f6020850182612892565b506040820151612e326040850182612892565b506060820151612e456060850182612892565b506080820151612e586080850182612892565b5060a0820151612e6b60a0850182612892565b50505050565b600060c082019050612e866000830184612df6565b92915050565b600080600060608486031215612ea557612ea46120e1565b5b6000612eb3868287016129b3565b9350506020612ec48682870161299e565b9250506040612ed58682870161299e565b9150509250925092565b6000612eea826122a4565b9150612ef5836122a4565b925082820190506fffffffffffffffffffffffffffffffff811115612f1d57612f1c612c3f565b5b92915050565b600060a0830160008301518482036000860152612f408282612d25565b9150506020830151612f556020860182612865565b506040830151612f686040860182612892565b506060830151612f7b6060860182612892565b506080830151612f8e6080860182612892565b508091505092915050565b60006020820190508181036000830152612fb38184612f23565b905092915050565b6000606082019050612fd06000830186612477565b612fdd6020830185612477565b612fea6040830184612295565b949350505050565b600081905092915050565b600061300882612cdf565b6130128185612ff2565b9350613022818560208601612cfb565b80840191505092915050565b600061303a8284612ffd565b915081905092915050565b60008115159050919050565b61305a81613045565b811461306557600080fd5b50565b60008151905061307781613051565b92915050565b600060208284031215613093576130926120e1565b5b60006130a184828501613068565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b60006130f16003836130aa565b91506130fc826130bb565b602082019050919050565b60006020820190508181036000830152613120816130e4565b9050919050565b600060408201905061313c6000830185612477565b6131496020830184612295565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b60006131866002836130aa565b915061319182613150565b602082019050919050565b600060208201905081810360008301526131b581613179565b905091905056fea2646970667358221220fbbd66475889d7ac657c49ccf01b24aebd8a3a6a4660d6a12ef8e805afb7dabf64736f6c63430008120033";

type DexAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DexAdapter__factory extends ContractFactory {
  constructor(...args: DexAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _positionManager: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DexAdapter> {
    return super.deploy(
      _positionManager,
      _swapRouter,
      overrides || {}
    ) as Promise<DexAdapter>;
  }
  override getDeployTransaction(
    _positionManager: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _positionManager,
      _swapRouter,
      overrides || {}
    );
  }
  override attach(address: string): DexAdapter {
    return super.attach(address) as DexAdapter;
  }
  override connect(signer: Signer): DexAdapter__factory {
    return super.connect(signer) as DexAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexAdapterInterface {
    return new utils.Interface(_abi) as DexAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DexAdapter {
    return new Contract(address, _abi, signerOrProvider) as DexAdapter;
  }
}
