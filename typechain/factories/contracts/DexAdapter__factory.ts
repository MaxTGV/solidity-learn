/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DexAdapter,
  DexAdapterInterface,
} from "../../contracts/DexAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_positionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "IdenticalAddressesError",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowanceError",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMintAmountsError",
    type: "error",
  },
  {
    inputs: [],
    name: "MintFailedError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "FeesCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "LiquidityIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "PositionMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "SwapSuccess",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "_sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "collectAllFees",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    name: "decreaseLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAdd0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAdd1",
        type: "uint256",
      },
    ],
    name: "increaseLiquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "poolFee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amount0ToMint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1ToMint",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "minTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "maxTick",
        type: "int24",
      },
    ],
    name: "mintNewPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "positionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMinimum",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "swapExactInput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMaximum",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "path",
        type: "bytes",
      },
    ],
    name: "swapExactOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002c5f38038062002c5f83398181016040528101906200003791906200016b565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001b2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001338262000106565b9050919050565b620001458162000126565b81146200015157600080fd5b50565b60008151905062000165816200013a565b92915050565b6000806040838503121562000185576200018462000101565b5b6000620001958582860162000154565b9250506020620001a88582860162000154565b9150509250929050565b612a9d80620001c26000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806399fbab881161007157806399fbab8814610191578063aa081875146101c4578063c31c9c07146101f4578063d54a371814610212578063e115bc5c14610243578063f1421a0e14610275576100a9565b8063120cdc21146100ae57806346ce96dd146100e1578063791b98bc146101125780638e909e511461013057806399d7b59414610160575b600080fd5b6100c860048036038101906100c39190611a32565b6102a5565b6040516100d89493929190611b0e565b60405180910390f35b6100fb60048036038101906100f69190611b53565b6106c7565b604051610109929190611b80565b60405180910390f35b61011a6108b1565b6040516101279190611c08565b60405180910390f35b61014a60048036038101906101459190611c4f565b6108d5565b6040516101579190611cc5565b60405180910390f35b61017a60048036038101906101759190611d0c565b610a82565b604051610188929190611b80565b60405180910390f35b6101ab60048036038101906101a69190611b53565b610c8c565b6040516101bb9493929190611d4c565b60405180910390f35b6101de60048036038101906101d99190611ed7565b610d38565b6040516101eb9190611f5a565b60405180910390f35b6101fc610f38565b6040516102099190611f96565b60405180910390f35b61022c60048036038101906102279190611fb1565b610f5e565b60405161023a929190611ff1565b60405180910390f35b61025d6004803603810190610258919061201a565b61100e565b60405161026c9392919061206d565b60405180910390f35b61028f600480360381019061028a9190611ed7565b611245565b60405161029c9190611f5a565b60405180910390f35b6000806000806000806102b88d8d610f5e565b915091506102c88233308d611445565b6102d48133308c611445565b6102ff8260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168c61159d565b61032a8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b61159d565b60006040518061016001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018d62ffffff1681526020018a60020b81526020018960020b81526020018c81526020018b815260200160008152602001600081526020013073ffffffffffffffffffffffffffffffffffffffff16815260200142815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388316456826040518263ffffffff1660e01b815260040161042291906121c1565b6080604051808303816000875af1158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190612207565b809750819850829950839a5050505050600087036104af576040517feb3d2e6a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001876fffffffffffffffffffffffffffffffff168152506003600089815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055509050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16887fa18d2d190be671792194a53a32cbe6fce8fe79179bef44ce539d316174755b92858a6040516106ae92919061226e565b60405180910390a4505050975097509750979350505050565b6000803373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610765576040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180608001604052808581526020013073ffffffffffffffffffffffffffffffffffffffff1681526020016fffffffffffffffffffffffffffffffff801681526020016fffffffffffffffffffffffffffffffff8016815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc6f7865826040518263ffffffff1660e01b815260040161081d91906122fb565b60408051808303816000875af115801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190612316565b80935081945050507f49d512bf9cb224241c05691e73eb9fab078cf350c7dbcbcf66788f1fc0cc8b0b8383604051610898929190611b80565b60405180910390a16108ab8484846116f2565b50915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095e576040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061096b8787610f5e565b9150915060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166313ead562838388886040518563ffffffff1660e01b81526004016109ce9493929190612374565b6020604051808303816000875af11580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1191906123ce565b92508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b85604051610a709190611cc5565b60405180910390a35050949350505050565b6000803373ffffffffffffffffffffffffffffffffffffffff166003600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b20576040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060a00160405280868152602001856fffffffffffffffffffffffffffffffff168152602001600081526020016000815260200142815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c49ccbe826040518263ffffffff1660e01b8152600401610bb89190612463565b60408051808303816000875af1158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa9190612316565b8093508194505050836003600087815260200190815260200160002060030160008282829054906101000a90046fffffffffffffffffffffffffffffffff16610c4391906124ad565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550610c848584846116f2565b509250929050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a90046fffffffffffffffffffffffffffffffff16905084565b6000838573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610d76929190611ff1565b602060405180830381865afa158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db791906124f1565b1015610def576040517f73a74a7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dfb85333087611445565b610e2885600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168661159d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f28c04986040518060a001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001868152506040518263ffffffff1660e01b8152600401610ebf9190612613565b6020604051808303816000875af1158015610ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0291906124f1565b90507f83ae5d684d4bb83a2df3011813d52adafdf58ac5223cc62c5bb8a773e95328b660405160405180910390a1949350505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fc6576040517f19b1bdc800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610611000578284611003565b83835b915091509250929050565b60008060003373ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110ae576040517f65b4837300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060c00160405280888152602001878152602001868152602001600081526020016000815260200142815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663219f5d17826040518263ffffffff1660e01b815260040161113a91906126b0565b6060604051808303816000875af1158015611159573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117d91906126cb565b809450819550829650505050836003600089815260200190815260200160002060030160008282829054906101000a90046fffffffffffffffffffffffffffffffff166111ca919061271e565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507f782713d3eac7cc9f07a7af8436ba5fb4359365b8673dc0d2c318faeb1d0bbdaa8484846040516112339392919061206d565b60405180910390a15093509350939050565b6000838573ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611283929190611ff1565b602060405180830381865afa1580156112a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c491906124f1565b10156112fc576040517f73a74a7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61130885333087611445565b61133585600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168661159d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c04b8d596040518060a001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001868152506040518263ffffffff1660e01b81526004016113cc91906127d8565b6020604051808303816000875af11580156113eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140f91906124f1565b90507f83ae5d684d4bb83a2df3011813d52adafdf58ac5223cc62c5bb8a773e95328b660405160405180910390a1949350505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b86868660405160240161147c939291906127fa565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516114e6919061286d565b6000604051808303816000865af19150503d8060008114611523576040519150601f19603f3d011682016040523d82523d6000602084013e611528565b606091505b5091509150818015611556575060008151148061155557508080602001905181019061155491906128bc565b5b5b611595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158c90612946565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016115d2929190612966565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161163c919061286d565b6000604051808303816000865af19150503d8060008114611679576040519150601f19603f3d011682016040523d82523d6000602084013e61167e565b606091505b50915091508180156116ac57506000815114806116ab5750808060200190518101906116aa91906128bc565b5b5b6116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e2906129db565b60405180910390fd5b5050505050565b60006003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006003600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506117ae8284876117c1565b6117b98184866117c1565b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b85856040516024016117f6929190612966565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611860919061286d565b6000604051808303816000865af19150503d806000811461189d576040519150601f19603f3d011682016040523d82523d6000602084013e6118a2565b606091505b50915091508180156118d057506000815114806118cf5750808060200190518101906118ce91906128bc565b5b5b61190f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190690612a47565b60405180910390fd5b5050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119558261192a565b9050919050565b6119658161194a565b811461197057600080fd5b50565b6000813590506119828161195c565b92915050565b600062ffffff82169050919050565b6119a081611988565b81146119ab57600080fd5b50565b6000813590506119bd81611997565b92915050565b6000819050919050565b6119d6816119c3565b81146119e157600080fd5b50565b6000813590506119f3816119cd565b92915050565b60008160020b9050919050565b611a0f816119f9565b8114611a1a57600080fd5b50565b600081359050611a2c81611a06565b92915050565b600080600080600080600060e0888a031215611a5157611a50611920565b5b6000611a5f8a828b01611973565b9750506020611a708a828b01611973565b9650506040611a818a828b016119ae565b9550506060611a928a828b016119e4565b9450506080611aa38a828b016119e4565b93505060a0611ab48a828b01611a1d565b92505060c0611ac58a828b01611a1d565b91505092959891949750929550565b611add816119c3565b82525050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611b0881611ae3565b82525050565b6000608082019050611b236000830187611ad4565b611b306020830186611aff565b611b3d6040830185611ad4565b611b4a6060830184611ad4565b95945050505050565b600060208284031215611b6957611b68611920565b5b6000611b77848285016119e4565b91505092915050565b6000604082019050611b956000830185611ad4565b611ba26020830184611ad4565b9392505050565b6000819050919050565b6000611bce611bc9611bc48461192a565b611ba9565b61192a565b9050919050565b6000611be082611bb3565b9050919050565b6000611bf282611bd5565b9050919050565b611c0281611be7565b82525050565b6000602082019050611c1d6000830184611bf9565b92915050565b611c2c8161192a565b8114611c3757600080fd5b50565b600081359050611c4981611c23565b92915050565b60008060008060808587031215611c6957611c68611920565b5b6000611c7787828801611973565b9450506020611c8887828801611973565b9350506040611c99878288016119ae565b9250506060611caa87828801611c3a565b91505092959194509250565b611cbf8161194a565b82525050565b6000602082019050611cda6000830184611cb6565b92915050565b611ce981611ae3565b8114611cf457600080fd5b50565b600081359050611d0681611ce0565b92915050565b60008060408385031215611d2357611d22611920565b5b6000611d31858286016119e4565b9250506020611d4285828601611cf7565b9150509250929050565b6000608082019050611d616000830187611cb6565b611d6e6020830186611cb6565b611d7b6040830185611cb6565b611d886060830184611aff565b95945050505050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611de482611d9b565b810181811067ffffffffffffffff82111715611e0357611e02611dac565b5b80604052505050565b6000611e16611916565b9050611e228282611ddb565b919050565b600067ffffffffffffffff821115611e4257611e41611dac565b5b611e4b82611d9b565b9050602081019050919050565b82818337600083830152505050565b6000611e7a611e7584611e27565b611e0c565b905082815260208101848484011115611e9657611e95611d96565b5b611ea1848285611e58565b509392505050565b600082601f830112611ebe57611ebd611d91565b5b8135611ece848260208601611e67565b91505092915050565b60008060008060808587031215611ef157611ef0611920565b5b6000611eff87828801611973565b9450506020611f10878288016119e4565b9350506040611f21878288016119e4565b925050606085013567ffffffffffffffff811115611f4257611f41611925565b5b611f4e87828801611ea9565b91505092959194509250565b6000602082019050611f6f6000830184611ad4565b92915050565b6000611f8082611bd5565b9050919050565b611f9081611f75565b82525050565b6000602082019050611fab6000830184611f87565b92915050565b60008060408385031215611fc857611fc7611920565b5b6000611fd685828601611973565b9250506020611fe785828601611973565b9150509250929050565b60006040820190506120066000830185611cb6565b6120136020830184611cb6565b9392505050565b60008060006060848603121561203357612032611920565b5b6000612041868287016119e4565b9350506020612052868287016119e4565b9250506040612063868287016119e4565b9150509250925092565b60006060820190506120826000830186611aff565b61208f6020830185611ad4565b61209c6040830184611ad4565b949350505050565b6120ad8161194a565b82525050565b6120bc81611988565b82525050565b6120cb816119f9565b82525050565b6120da816119c3565b82525050565b610160820160008201516120f760008501826120a4565b50602082015161210a60208501826120a4565b50604082015161211d60408501826120b3565b50606082015161213060608501826120c2565b50608082015161214360808501826120c2565b5060a082015161215660a08501826120d1565b5060c082015161216960c08501826120d1565b5060e082015161217c60e08501826120d1565b506101008201516121916101008501826120d1565b506101208201516121a66101208501826120a4565b506101408201516121bb6101408501826120d1565b50505050565b6000610160820190506121d760008301846120e0565b92915050565b6000815190506121ec816119cd565b92915050565b60008151905061220181611ce0565b92915050565b6000806000806080858703121561222157612220611920565b5b600061222f878288016121dd565b9450506020612240878288016121f2565b9350506040612251878288016121dd565b9250506060612262878288016121dd565b91505092959194509250565b60006040820190506122836000830185611cb6565b6122906020830184611aff565b9392505050565b6122a081611ae3565b82525050565b6080820160008201516122bc60008501826120d1565b5060208201516122cf60208501826120a4565b5060408201516122e26040850182612297565b5060608201516122f56060850182612297565b50505050565b600060808201905061231060008301846122a6565b92915050565b6000806040838503121561232d5761232c611920565b5b600061233b858286016121dd565b925050602061234c858286016121dd565b9150509250929050565b61235f81611988565b82525050565b61236e8161192a565b82525050565b60006080820190506123896000830187611cb6565b6123966020830186611cb6565b6123a36040830185612356565b6123b06060830184612365565b95945050505050565b6000815190506123c88161195c565b92915050565b6000602082840312156123e4576123e3611920565b5b60006123f2848285016123b9565b91505092915050565b60a08201600082015161241160008501826120d1565b5060208201516124246020850182612297565b50604082015161243760408501826120d1565b50606082015161244a60608501826120d1565b50608082015161245d60808501826120d1565b50505050565b600060a08201905061247860008301846123fb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006124b882611ae3565b91506124c383611ae3565b925082820390506fffffffffffffffffffffffffffffffff8111156124eb576124ea61247e565b5b92915050565b60006020828403121561250757612506611920565b5b6000612515848285016121dd565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561255857808201518184015260208101905061253d565b60008484015250505050565b600061256f8261251e565b6125798185612529565b935061258981856020860161253a565b61259281611d9b565b840191505092915050565b600060a08301600083015184820360008601526125ba8282612564565b91505060208301516125cf60208601826120a4565b5060408301516125e260408601826120d1565b5060608301516125f560608601826120d1565b50608083015161260860808601826120d1565b508091505092915050565b6000602082019050818103600083015261262d818461259d565b905092915050565b60c08201600082015161264b60008501826120d1565b50602082015161265e60208501826120d1565b50604082015161267160408501826120d1565b50606082015161268460608501826120d1565b50608082015161269760808501826120d1565b5060a08201516126aa60a08501826120d1565b50505050565b600060c0820190506126c56000830184612635565b92915050565b6000806000606084860312156126e4576126e3611920565b5b60006126f2868287016121f2565b9350506020612703868287016121dd565b9250506040612714868287016121dd565b9150509250925092565b600061272982611ae3565b915061273483611ae3565b925082820190506fffffffffffffffffffffffffffffffff81111561275c5761275b61247e565b5b92915050565b600060a083016000830151848203600086015261277f8282612564565b915050602083015161279460208601826120a4565b5060408301516127a760408601826120d1565b5060608301516127ba60608601826120d1565b5060808301516127cd60808601826120d1565b508091505092915050565b600060208201905081810360008301526127f28184612762565b905092915050565b600060608201905061280f6000830186611cb6565b61281c6020830185611cb6565b6128296040830184611ad4565b949350505050565b600081905092915050565b60006128478261251e565b6128518185612831565b935061286181856020860161253a565b80840191505092915050565b6000612879828461283c565b915081905092915050565b60008115159050919050565b61289981612884565b81146128a457600080fd5b50565b6000815190506128b681612890565b92915050565b6000602082840312156128d2576128d1611920565b5b60006128e0848285016128a7565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b60006129306003836128e9565b915061293b826128fa565b602082019050919050565b6000602082019050818103600083015261295f81612923565b9050919050565b600060408201905061297b6000830185611cb6565b6129886020830184611ad4565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b60006129c56002836128e9565b91506129d08261298f565b602082019050919050565b600060208201905081810360008301526129f4816129b8565b9050919050565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b6000612a316002836128e9565b9150612a3c826129fb565b602082019050919050565b60006020820190508181036000830152612a6081612a24565b905091905056fea2646970667358221220bed9181b7af02d4ca63e8cab19363d8580e0d82ab99fcf5a5ab944f70c5fea3164736f6c63430008120033";

type DexAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DexAdapter__factory extends ContractFactory {
  constructor(...args: DexAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _positionManager: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DexAdapter> {
    return super.deploy(
      _positionManager,
      _swapRouter,
      overrides || {}
    ) as Promise<DexAdapter>;
  }
  override getDeployTransaction(
    _positionManager: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _positionManager,
      _swapRouter,
      overrides || {}
    );
  }
  override attach(address: string): DexAdapter {
    return super.attach(address) as DexAdapter;
  }
  override connect(signer: Signer): DexAdapter__factory {
    return super.connect(signer) as DexAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexAdapterInterface {
    return new utils.Interface(_abi) as DexAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DexAdapter {
    return new Contract(address, _abi, signerOrProvider) as DexAdapter;
  }
}
