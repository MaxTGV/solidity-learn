/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC20, ERC20Interface } from "../../contracts/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AmountExceedsApproveBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveFromZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "BurnAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "BurnFromZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintOwnerOnly",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApproveAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003044380380620030448339818101604052810190620000379190620004cd565b62000053673b9c46ec76d9295860c01b6200025960201b60201c565b6200006f6752b5bbd6e9a6682b60c01b6200025960201b60201c565b8460009081620000809190620007d4565b506200009d67851d4f0c2eb38d4f60c01b6200025960201b60201c565b8360019081620000ae9190620007d4565b50620000cb6754f98a8ae7b697ea60c01b6200025960201b60201c565b82600260006101000a81548160ff021916908360ff160217905550620001026703b7ff3a9af29f9160c01b6200025960201b60201c565b81600381905550620001256794c65ddf68a63f6d60c01b6200025960201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200018267b3ae4adf7dab9c4960c01b6200025960201b60201c565b81600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620001e267a42c56ddba0fcd7a60c01b6200025960201b60201c565b620001fe678cffbc45d69c6c3f60c01b6200025960201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688583604051620002469190620008cc565b60405180910390a25050505050620008e9565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002c5826200027a565b810181811067ffffffffffffffff82111715620002e757620002e66200028b565b5b80604052505050565b6000620002fc6200025c565b90506200030a8282620002ba565b919050565b600067ffffffffffffffff8211156200032d576200032c6200028b565b5b62000338826200027a565b9050602081019050919050565b60005b838110156200036557808201518184015260208101905062000348565b60008484015250505050565b60006200038862000382846200030f565b620002f0565b905082815260208101848484011115620003a757620003a662000275565b5b620003b484828562000345565b509392505050565b600082601f830112620003d457620003d362000270565b5b8151620003e684826020860162000371565b91505092915050565b600060ff82169050919050565b6200040781620003ef565b81146200041357600080fd5b50565b6000815190506200042781620003fc565b92915050565b6000819050919050565b62000442816200042d565b81146200044e57600080fd5b50565b600081519050620004628162000437565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004958262000468565b9050919050565b620004a78162000488565b8114620004b357600080fd5b50565b600081519050620004c7816200049c565b92915050565b600080600080600060a08688031215620004ec57620004eb62000266565b5b600086015167ffffffffffffffff8111156200050d576200050c6200026b565b5b6200051b88828901620003bc565b955050602086015167ffffffffffffffff8111156200053f576200053e6200026b565b5b6200054d88828901620003bc565b9450506040620005608882890162000416565b9350506060620005738882890162000451565b92505060806200058688828901620004b6565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005e657607f821691505b602082108103620005fc57620005fb6200059e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006667fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000627565b62000672868362000627565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006b5620006af620006a9846200042d565b6200068a565b6200042d565b9050919050565b6000819050919050565b620006d18362000694565b620006e9620006e082620006bc565b84845462000634565b825550505050565b600090565b62000700620006f1565b6200070d818484620006c6565b505050565b5b81811015620007355762000729600082620006f6565b60018101905062000713565b5050565b601f82111562000784576200074e8162000602565b620007598462000617565b8101602085101562000769578190505b62000781620007788562000617565b83018262000712565b50505b505050565b600082821c905092915050565b6000620007a96000198460080262000789565b1980831691505092915050565b6000620007c4838362000796565b9150826002028217905092915050565b620007df8262000593565b67ffffffffffffffff811115620007fb57620007fa6200028b565b5b620008078254620005cd565b6200081482828562000739565b600060209050601f8311600181146200084c576000841562000837578287015190505b620008438582620007b6565b865550620008b3565b601f1984166200085c8662000602565b60005b8281101562000886578489015182556001820191506020850194506020810190506200085f565b86831015620008a65784890151620008a2601f89168262000796565b8355505b6001600288020188555050505b505050505050565b620008c6816200042d565b82525050565b6000602082019050620008e36000830184620008bb565b92915050565b61274b80620008f96000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146102c3578063b09f1266146102f3578063d28d885214610311578063dd62ed3e1461032f57610100565b806370a082311461022957806395d89b41146102595780639dc29fac14610277578063a457c2d71461029357610100565b8063313ce567116100d3578063313ce567146101a157806332424aa3146101bf57806339509351146101dd57806340c10f191461020d57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a91906123cc565b60405180910390f35b61013d60048036038101906101389190612487565b61042d565b60405161014a91906124e2565b60405180910390f35b61015b6104a8565b604051610168919061250c565b60405180910390f35b61018b60048036038101906101869190612527565b6104ee565b60405161019891906124e2565b60405180910390f35b6101a9610688565b6040516101b69190612596565b60405180910390f35b6101c76106db565b6040516101d49190612596565b60405180910390f35b6101f760048036038101906101f29190612487565b6106ee565b60405161020491906124e2565b60405180910390f35b61022760048036038101906102229190612487565b610b3f565b005b610243600480360381019061023e91906125b1565b610ea7565b604051610250919061250c565b60405180910390f35b610261610f2c565b60405161026e91906123cc565b60405180910390f35b610291600480360381019061028c9190612487565b610ffa565b005b6102ad60048036038101906102a89190612487565b61143e565b6040516102ba91906124e2565b60405180910390f35b6102dd60048036038101906102d89190612487565b6119a9565b6040516102ea91906124e2565b60405180910390f35b6102fb611a26565b60405161030891906123cc565b60405180910390f35b610319611ab4565b60405161032691906123cc565b60405180910390f35b610349600480360381019061034491906125de565b611b42565b604051610356919061250c565b60405180910390f35b60606103756779a2e38b5428193460c01b611c05565b610389674481c8d23876300b60c01b611c05565b61039d67b74b0b8da1c009e960c01b611c05565b600080546103aa9061264d565b80601f01602080910402602001604051908101604052809291908181526020018280546103d69061264d565b80156104235780601f106103f857610100808354040283529160200191610423565b820191906000526020600020905b81548152906001019060200180831161040657829003601f168201915b5050505050905090565b600061044367d0dfacf0b7904b8160c01b611c05565b610457679d5848622056797f60c01b611c05565b61046b6771618548e4f6c38b60c01b611c05565b610476338484611c08565b61048a6775cb5a263cf04f6660c01b611c05565b61049e672c36b8c70ae8ab4760c01b611c05565b6001905092915050565b60006104be67863bbad904e8530c60c01b611c05565b6104d267b4a95603bf53d91360c01b611c05565b6104e667b2b07847c87c9d0960c01b611c05565b600354905090565b600061050467f6e4c1282e30135460c01b611c05565b610518679a1b6385cb2f727a60c01b611c05565b61052c67b675503f75fac2c260c01b611c05565b6105398484846001611e0d565b61054d6749f5fecb1215ad8a60c01b611c05565b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105d591906126ad565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610669672ec3d3017bb145f760c01b611c05565b61067d67744d3c861947f9aa60c01b611c05565b600190509392505050565b600061069e677cb0f0db877dd09a60c01b611c05565b6106b267c011687504a847db60c01b611c05565b6106c6673a06cf8b2c0fa90a60c01b611c05565b600260009054906101000a900460ff16905090565b600260009054906101000a900460ff1681565b6000610704672f6ad6b7e30711a160c01b611c05565b610718672cdd2d8806e14d3060c01b611c05565b61072c67e353ec403d7303df60c01b611c05565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107ba5761077467d3d85db8dad130f660c01b611c05565b61078867c55acd7222de1efe60c01b611c05565b6040517f3b719e1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ce67837fbc9daa6a991760c01b611c05565b6107e267c15b2aa1c064bc0360c01b611c05565b6107f667fe41bef4063197ca60c01b611c05565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036108d45761088e670f61e83ffa9865bc60c01b611c05565b6108a2673538354cc3d6169860c01b611c05565b6040517ff0f0ff1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108e867f10d74720f9df51c60c01b611c05565b6108fc6706c7490d4efeefd360c01b611c05565b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461098491906126e1565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a186704bfa25ab64d8a3160c01b611c05565b610a2c67d163ee80efee36d060c01b611c05565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610b05919061250c565b60405180910390a3610b216786a265d0c303d91060c01b611c05565b610b35676a7405ced932350c60c01b611c05565b6001905092915050565b610b53678e7d05dce169c16c60c01b611c05565b610b67670104ed73436760c960c01b611c05565b610b7b67c262fc04d042e3d660c01b611c05565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c2a57610be46799b35f370635b55760c01b611c05565b610bf8671b0eafa242f276eb60c01b611c05565b6040517fcc3f445400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c3e675cf08c4ca3d1110e60c01b611c05565b610c5267784d854427aa0e7460c01b611c05565b610c666754c8c9ce8548109860c01b611c05565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf457610cae673918fab1ea1804bc60c01b611c05565b610cc26796b84de1096f64d260c01b611c05565b6040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d0867ee4fe0957238b43560c01b611c05565b610d1c67ef4182d08fecc84e60c01b611c05565b8060036000828254610d2e91906126e1565b92505081905550610d4967cbf64fbc0dfca1d660c01b611c05565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d9891906126e1565b92505081905550610db3677e09f47e960c337360c01b611c05565b610dc7676cfda08b923479e760c01b611c05565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688582604051610e0d919061250c565b60405180910390a2610e296723a4f085c6ddc93960c01b611c05565b610e3d67a9e997d5299ee7f460c01b611c05565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e9b919061250c565b60405180910390a35050565b6000610ebd671dcd1c5132a3f16960c01b611c05565b610ed1675346f484e1c0cc5960c01b611c05565b610ee567ff2069bfa0e0cfb160c01b611c05565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610f426718c921ac94485b8260c01b611c05565b610f56675d4957d0fa7593e160c01b611c05565b610f6a672b7e71cd5aa58ce760c01b611c05565b60018054610f779061264d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa39061264d565b8015610ff05780601f10610fc557610100808354040283529160200191610ff0565b820191906000526020600020905b815481529060010190602001808311610fd357829003601f168201915b5050505050905090565b61100e67e316aa55965754f760c01b611c05565b61102267b516bd2e5218eb1260c01b611c05565b61103667f3fa3e080fecc48860c01b611c05565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e55761109f675444f0128bd932a660c01b611c05565b6110b3678634c85a5857c15b60c01b611c05565b6040517fcc3f445400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110f96789c832162f45fc8a60c01b611c05565b61110d67876fb0c69c3dfb1660c01b611c05565b61112167588d07272274647d60c01b611c05565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111af5761116967b8ddb605cbeffcf460c01b611c05565b61117d672fe737a30fc34fea60c01b611c05565b6040517fb817eee700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111c367560a7fd8ff34fd4360c01b611c05565b6111d767b424375e6365c70960c01b611c05565b6111eb672cd09d2eb95b0c5d60c01b611c05565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811061128b57611245677ef7226512a5c56a60c01b611c05565b61125967157892610b90f11a60c01b611c05565b6040517f177466fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61129f677528ca9e24a5fc3160c01b611c05565b6112b3676d6da2c4e152649f60c01b611c05565b80600360008282546112c591906126ad565b925050819055506112e06745f0795c4aedf2a660c01b611c05565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461132f91906126ad565b9250508190555061134a6737ee721e9603e4e160c01b611c05565b61135e670dfeed629183dff060c01b611c05565b8173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040516113a4919061250c565b60405180910390a26113c0673ab40d9166dc22fc60c01b611c05565b6113d4674e5c2d768e07fc5860c01b611c05565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611432919061250c565b60405180910390a35050565b600061145467806779bae358fc6b60c01b611c05565b611468673ebffbc25575838760c01b611c05565b61147c67da700291cc4828e060c01b611c05565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361150a576114c4678c65ce0b192bd44160c01b611c05565b6114d867baf59419a2d5961a60c01b611c05565b6040517f3b719e1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61151e673683222f2e5779b660c01b611c05565b6115326741da28fdb2ee9d2960c01b611c05565b611546675388d0a20268c91960c01b611c05565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611624576115de67c3dc4646b6381d0360c01b611c05565b6115f267b1e39d361ed7394c60c01b611c05565b6040517ff0f0ff1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611638675eaf5f0247b039e360c01b611c05565b61164c67a844188731e8f2fb60c01b611c05565b611660673c5376ec683953d760c01b611c05565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561173e576116f8674cbb4ecf85ee8ff460c01b611c05565b61170c67a3a33631ce3ad1ae60c01b611c05565b6040517f21cb316e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61175267efafa9c81d9e8aad60c01b611c05565b6117666796934b4aa3330b0660c01b611c05565b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117ee91906126ad565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118826731378bf48bad235160c01b611c05565b611896672354a7f4cdd047b960c01b611c05565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161196f919061250c565b60405180910390a361198b6717fa3e378d457b0060c01b611c05565b61199f67b21b68da6c4d757860c01b611c05565b6001905092915050565b60006119bf671878521f27144a1d60c01b611c05565b6119d367bd4f7028044d278d60c01b611c05565b6119e767b331c40ece7488fb60c01b611c05565b6119f43384846000611e0d565b611a0867a8e38e8bfdeb1db860c01b611c05565b611a1c676b157e1e4c4b320c60c01b611c05565b6001905092915050565b60018054611a339061264d565b80601f0160208091040260200160405190810160405280929190818152602001828054611a5f9061264d565b8015611aac5780601f10611a8157610100808354040283529160200191611aac565b820191906000526020600020905b815481529060010190602001808311611a8f57829003601f168201915b505050505081565b60008054611ac19061264d565b80601f0160208091040260200160405190810160405280929190818152602001828054611aed9061264d565b8015611b3a5780601f10611b0f57610100808354040283529160200191611b3a565b820191906000526020600020905b815481529060010190602001808311611b1d57829003601f168201915b505050505081565b6000611b58674ca88ffae7d8eb8660c01b611c05565b611b6c67952c45fd032e873f60c01b611c05565b611b806763a88970b864f4ae60c01b611c05565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b611c1c67eeecfd07e18eeb6760c01b611c05565b611c3067e27f49405a215a4d60c01b611c05565b611c44678ca38a04d7318b6260c01b611c05565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cd257611c8c6732d158688a7f191b60c01b611c05565b611ca06712d417d77e5d382b60c01b611c05565b6040517f3b719e1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ce667a05324e8fa818a4860c01b611c05565b611cfa677006811f3262c7a260c01b611c05565b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d8f67ed894d3c139a716760c01b611c05565b611da367338fc14beb3de8cb60c01b611c05565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611e00919061250c565b60405180910390a3505050565b611e21679ebe3c809e81626c60c01b611c05565b611e35679c1ce9aeebb0a41d60c01b611c05565b611e49675c882be4f2ee9aac60c01b611c05565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ef857611eb267916e7dfca074644a60c01b611c05565b611ec667775dc03e80ccd20b60c01b611c05565b6040517fcc3f445400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f0c676879e4f745f12ddd60c01b611c05565b611f2067b56b9e2a62930b3260c01b611c05565b611f346778e26319ba1817c060c01b611c05565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fc257611f7c67d6c2f2bc77d9e6ae60c01b611c05565b611f906769c721afb52cb0d160c01b611c05565b6040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611fd667b6c7b7bb23bb10e860c01b611c05565b611fea6701667411db61454560c01b611c05565b611ffe67eabb2fa147844e2b60c01b611c05565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821061209e576120586730fb55a5cd59b53560c01b611c05565b61206c674120356391e4d51f60c01b611c05565b6040517f5dd58b8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120b2670915d70c29bb6cd660c01b611c05565b6120c6676d8a49972f99124160c01b611c05565b6120da67d7a524857ca7438d60c01b611c05565b8080156121625750600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482115b156121c15761217b6768114374e01cc2af60c01b611c05565b61218f67d944685b4a306a3660c01b611c05565b6040517f21cb316e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6121d567f14a300c40d6aee360c01b611c05565b6121e967b1b522bc0e6fee8460c01b611c05565b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461223891906126ad565b9250508190555061225367d601250b4d7e628960c01b611c05565b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122a291906126e1565b925050819055506122bd67c8836f05cf3dd6d560c01b611c05565b6122d167046da5234272fa3760c01b611c05565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161232e919061250c565b60405180910390a350505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561237657808201518184015260208101905061235b565b60008484015250505050565b6000601f19601f8301169050919050565b600061239e8261233c565b6123a88185612347565b93506123b8818560208601612358565b6123c181612382565b840191505092915050565b600060208201905081810360008301526123e68184612393565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061241e826123f3565b9050919050565b61242e81612413565b811461243957600080fd5b50565b60008135905061244b81612425565b92915050565b6000819050919050565b61246481612451565b811461246f57600080fd5b50565b6000813590506124818161245b565b92915050565b6000806040838503121561249e5761249d6123ee565b5b60006124ac8582860161243c565b92505060206124bd85828601612472565b9150509250929050565b60008115159050919050565b6124dc816124c7565b82525050565b60006020820190506124f760008301846124d3565b92915050565b61250681612451565b82525050565b600060208201905061252160008301846124fd565b92915050565b6000806000606084860312156125405761253f6123ee565b5b600061254e8682870161243c565b935050602061255f8682870161243c565b925050604061257086828701612472565b9150509250925092565b600060ff82169050919050565b6125908161257a565b82525050565b60006020820190506125ab6000830184612587565b92915050565b6000602082840312156125c7576125c66123ee565b5b60006125d58482850161243c565b91505092915050565b600080604083850312156125f5576125f46123ee565b5b60006126038582860161243c565b92505060206126148582860161243c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061266557607f821691505b6020821081036126785761267761261e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006126b882612451565b91506126c383612451565b92508282039050818111156126db576126da61267e565b5b92915050565b60006126ec82612451565b91506126f783612451565b925082820190508082111561270f5761270e61267e565b5b9291505056fea2646970667358221220d61a9a0df65b6ea98495e97b8cf4ee30e49da97ee83902b4b0347d01a82bdead64736f6c63430008120033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    initialSupply_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      owner_,
      overrides || {}
    ) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    initialSupply_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      owner_,
      overrides || {}
    );
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
