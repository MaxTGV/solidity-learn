/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC20, ERC20Interface } from "../../contracts/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AmountExceedsApproveBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveFromZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "BurnAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "BurnFromZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintOwnerOnly",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApproveAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002f2838038062002f288339818101604052810190620000379190620004cd565b620000536752b5bbd6e9a6682b60c01b6200025960201b60201c565b6200006f67851d4f0c2eb38d4f60c01b6200025960201b60201c565b8460009081620000809190620007d4565b506200009d6754f98a8ae7b697ea60c01b6200025960201b60201c565b8360019081620000ae9190620007d4565b50620000cb6703b7ff3a9af29f9160c01b6200025960201b60201c565b82600260006101000a81548160ff021916908360ff160217905550620001026794c65ddf68a63f6d60c01b6200025960201b60201c565b816003819055506200012567b3ae4adf7dab9c4960c01b6200025960201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200018267a42c56ddba0fcd7a60c01b6200025960201b60201c565b81600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620001e2678cffbc45d69c6c3f60c01b6200025960201b60201c565b620001fe6779a2e38b5428193460c01b6200025960201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688583604051620002469190620008cc565b60405180910390a25050505050620008e9565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002c5826200027a565b810181811067ffffffffffffffff82111715620002e757620002e66200028b565b5b80604052505050565b6000620002fc6200025c565b90506200030a8282620002ba565b919050565b600067ffffffffffffffff8211156200032d576200032c6200028b565b5b62000338826200027a565b9050602081019050919050565b60005b838110156200036557808201518184015260208101905062000348565b60008484015250505050565b60006200038862000382846200030f565b620002f0565b905082815260208101848484011115620003a757620003a662000275565b5b620003b484828562000345565b509392505050565b600082601f830112620003d457620003d362000270565b5b8151620003e684826020860162000371565b91505092915050565b600060ff82169050919050565b6200040781620003ef565b81146200041357600080fd5b50565b6000815190506200042781620003fc565b92915050565b6000819050919050565b62000442816200042d565b81146200044e57600080fd5b50565b600081519050620004628162000437565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004958262000468565b9050919050565b620004a78162000488565b8114620004b357600080fd5b50565b600081519050620004c7816200049c565b92915050565b600080600080600060a08688031215620004ec57620004eb62000266565b5b600086015167ffffffffffffffff8111156200050d576200050c6200026b565b5b6200051b88828901620003bc565b955050602086015167ffffffffffffffff8111156200053f576200053e6200026b565b5b6200054d88828901620003bc565b9450506040620005608882890162000416565b9350506060620005738882890162000451565b92505060806200058688828901620004b6565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005e657607f821691505b602082108103620005fc57620005fb6200059e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006667fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000627565b62000672868362000627565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006b5620006af620006a9846200042d565b6200068a565b6200042d565b9050919050565b6000819050919050565b620006d18362000694565b620006e9620006e082620006bc565b84845462000634565b825550505050565b600090565b62000700620006f1565b6200070d818484620006c6565b505050565b5b81811015620007355762000729600082620006f6565b60018101905062000713565b5050565b601f82111562000784576200074e8162000602565b620007598462000617565b8101602085101562000769578190505b62000781620007788562000617565b83018262000712565b50505b505050565b600082821c905092915050565b6000620007a96000198460080262000789565b1980831691505092915050565b6000620007c4838362000796565b9150826002028217905092915050565b620007df8262000593565b67ffffffffffffffff811115620007fb57620007fa6200028b565b5b620008078254620005cd565b6200081482828562000739565b600060209050601f8311600181146200084c576000841562000837578287015190505b620008438582620007b6565b865550620008b3565b601f1984166200085c8662000602565b60005b8281101562000886578489015182556001820191506020850194506020810190506200085f565b86831015620008a65784890151620008a2601f89168262000796565b8355505b6001600288020188555050505b505050505050565b620008c6816200042d565b82525050565b6000602082019050620008e36000830184620008bb565b92915050565b61262f80620008f96000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146102c3578063b09f1266146102f3578063d28d885214610311578063dd62ed3e1461032f57610100565b806370a082311461022957806395d89b41146102595780639dc29fac14610277578063a457c2d71461029357610100565b8063313ce567116100d3578063313ce567146101a157806332424aa3146101bf57806339509351146101dd57806340c10f191461020d57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a91906122b0565b60405180910390f35b61013d6004803603810190610138919061236b565b61042d565b60405161014a91906123c6565b60405180910390f35b61015b6104a8565b60405161016891906123f0565b60405180910390f35b61018b6004803603810190610186919061240b565b6104ee565b60405161019891906123c6565b60405180910390f35b6101a961056c565b6040516101b6919061247a565b60405180910390f35b6101c76105bf565b6040516101d4919061247a565b60405180910390f35b6101f760048036038101906101f2919061236b565b6105d2565b60405161020491906123c6565b60405180910390f35b6102276004803603810190610222919061236b565b610a23565b005b610243600480360381019061023e9190612495565b610d8b565b60405161025091906123f0565b60405180910390f35b610261610e10565b60405161026e91906122b0565b60405180910390f35b610291600480360381019061028c919061236b565b610ede565b005b6102ad60048036038101906102a8919061236b565b611322565b6040516102ba91906123c6565b60405180910390f35b6102dd60048036038101906102d8919061236b565b61188d565b6040516102ea91906123c6565b60405180910390f35b6102fb61190a565b60405161030891906122b0565b60405180910390f35b610319611998565b60405161032691906122b0565b60405180910390f35b610349600480360381019061034491906124c2565b611a26565b60405161035691906123f0565b60405180910390f35b6060610375674481c8d23876300b60c01b611ae9565b61038967b74b0b8da1c009e960c01b611ae9565b61039d6718c921ac94485b8260c01b611ae9565b600080546103aa90612531565b80601f01602080910402602001604051908101604052809291908181526020018280546103d690612531565b80156104235780601f106103f857610100808354040283529160200191610423565b820191906000526020600020905b81548152906001019060200180831161040657829003601f168201915b5050505050905090565b6000610443679d5848622056797f60c01b611ae9565b6104576771618548e4f6c38b60c01b611ae9565b61046b6775cb5a263cf04f6660c01b611ae9565b610476338484611aec565b61048a672c36b8c70ae8ab4760c01b611ae9565b61049e67f6e4c1282e30135460c01b611ae9565b6001905092915050565b60006104be67b4a95603bf53d91360c01b611ae9565b6104d267b2b07847c87c9d0960c01b611ae9565b6104e6671dcd1c5132a3f16960c01b611ae9565b600354905090565b6000610504679a1b6385cb2f727a60c01b611ae9565b61051867b675503f75fac2c260c01b611ae9565b61052c6749f5fecb1215ad8a60c01b611ae9565b6105398484846001611cf1565b61054d672ec3d3017bb145f760c01b611ae9565b61056167744d3c861947f9aa60c01b611ae9565b600190509392505050565b600061058267c011687504a847db60c01b611ae9565b610596673a06cf8b2c0fa90a60c01b611ae9565b6105aa67863bbad904e8530c60c01b611ae9565b600260009054906101000a900460ff16905090565b600260009054906101000a900460ff1681565b60006105e8672f6ad6b7e30711a160c01b611ae9565b6105fc672cdd2d8806e14d3060c01b611ae9565b61061067e353ec403d7303df60c01b611ae9565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361069e5761065867d3d85db8dad130f660c01b611ae9565b61066c67c55acd7222de1efe60c01b611ae9565b6040517f3b719e1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106b267837fbc9daa6a991760c01b611ae9565b6106c667c15b2aa1c064bc0360c01b611ae9565b6106da67fe41bef4063197ca60c01b611ae9565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036107b857610772670f61e83ffa9865bc60c01b611ae9565b610786673538354cc3d6169860c01b611ae9565b6040517ff0f0ff1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107cc67f10d74720f9df51c60c01b611ae9565b6107e06706c7490d4efeefd360c01b611ae9565b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108689190612591565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108fc6704bfa25ab64d8a3160c01b611ae9565b61091067d163ee80efee36d060c01b611ae9565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516109e991906123f0565b60405180910390a3610a056786a265d0c303d91060c01b611ae9565b610a19676a7405ced932350c60c01b611ae9565b6001905092915050565b610a37678e7d05dce169c16c60c01b611ae9565b610a4b670104ed73436760c960c01b611ae9565b610a5f67c262fc04d042e3d660c01b611ae9565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0e57610ac86799b35f370635b55760c01b611ae9565b610adc671b0eafa242f276eb60c01b611ae9565b6040517fcc3f445400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b22675cf08c4ca3d1110e60c01b611ae9565b610b3667784d854427aa0e7460c01b611ae9565b610b4a6754c8c9ce8548109860c01b611ae9565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bd857610b92673918fab1ea1804bc60c01b611ae9565b610ba66796b84de1096f64d260c01b611ae9565b6040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bec67ee4fe0957238b43560c01b611ae9565b610c0067ef4182d08fecc84e60c01b611ae9565b8060036000828254610c129190612591565b92505081905550610c2d67cbf64fbc0dfca1d660c01b611ae9565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c7c9190612591565b92505081905550610c97677e09f47e960c337360c01b611ae9565b610cab676cfda08b923479e760c01b611ae9565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688582604051610cf191906123f0565b60405180910390a2610d0d6723a4f085c6ddc93960c01b611ae9565b610d2167a9e997d5299ee7f460c01b611ae9565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d7f91906123f0565b60405180910390a35050565b6000610da1675346f484e1c0cc5960c01b611ae9565b610db567ff2069bfa0e0cfb160c01b611ae9565b610dc9674ca88ffae7d8eb8660c01b611ae9565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610e26675d4957d0fa7593e160c01b611ae9565b610e3a672b7e71cd5aa58ce760c01b611ae9565b610e4e677cb0f0db877dd09a60c01b611ae9565b60018054610e5b90612531565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8790612531565b8015610ed45780601f10610ea957610100808354040283529160200191610ed4565b820191906000526020600020905b815481529060010190602001808311610eb757829003601f168201915b5050505050905090565b610ef267e316aa55965754f760c01b611ae9565b610f0667b516bd2e5218eb1260c01b611ae9565b610f1a67f3fa3e080fecc48860c01b611ae9565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fc957610f83675444f0128bd932a660c01b611ae9565b610f97678634c85a5857c15b60c01b611ae9565b6040517fcc3f445400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610fdd6789c832162f45fc8a60c01b611ae9565b610ff167876fb0c69c3dfb1660c01b611ae9565b61100567588d07272274647d60c01b611ae9565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110935761104d67b8ddb605cbeffcf460c01b611ae9565b611061672fe737a30fc34fea60c01b611ae9565b6040517fb817eee700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110a767560a7fd8ff34fd4360c01b611ae9565b6110bb67b424375e6365c70960c01b611ae9565b6110cf672cd09d2eb95b0c5d60c01b611ae9565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811061116f57611129677ef7226512a5c56a60c01b611ae9565b61113d67157892610b90f11a60c01b611ae9565b6040517f177466fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611183677528ca9e24a5fc3160c01b611ae9565b611197676d6da2c4e152649f60c01b611ae9565b80600360008282546111a991906125c5565b925050819055506111c46745f0795c4aedf2a660c01b611ae9565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121391906125c5565b9250508190555061122e6737ee721e9603e4e160c01b611ae9565b611242670dfeed629183dff060c01b611ae9565b8173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405161128891906123f0565b60405180910390a26112a4673ab40d9166dc22fc60c01b611ae9565b6112b8674e5c2d768e07fc5860c01b611ae9565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161131691906123f0565b60405180910390a35050565b600061133867806779bae358fc6b60c01b611ae9565b61134c673ebffbc25575838760c01b611ae9565b61136067da700291cc4828e060c01b611ae9565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113ee576113a8678c65ce0b192bd44160c01b611ae9565b6113bc67baf59419a2d5961a60c01b611ae9565b6040517f3b719e1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611402673683222f2e5779b660c01b611ae9565b6114166741da28fdb2ee9d2960c01b611ae9565b61142a675388d0a20268c91960c01b611ae9565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611508576114c267c3dc4646b6381d0360c01b611ae9565b6114d667b1e39d361ed7394c60c01b611ae9565b6040517ff0f0ff1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61151c675eaf5f0247b039e360c01b611ae9565b61153067a844188731e8f2fb60c01b611ae9565b611544673c5376ec683953d760c01b611ae9565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115611622576115dc674cbb4ecf85ee8ff460c01b611ae9565b6115f067a3a33631ce3ad1ae60c01b611ae9565b6040517f21cb316e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61163667efafa9c81d9e8aad60c01b611ae9565b61164a6796934b4aa3330b0660c01b611ae9565b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116d291906125c5565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117666731378bf48bad235160c01b611ae9565b61177a672354a7f4cdd047b960c01b611ae9565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161185391906123f0565b60405180910390a361186f6717fa3e378d457b0060c01b611ae9565b61188367b21b68da6c4d757860c01b611ae9565b6001905092915050565b60006118a367bd4f7028044d278d60c01b611ae9565b6118b767b331c40ece7488fb60c01b611ae9565b6118cb67a8e38e8bfdeb1db860c01b611ae9565b6118d83384846000611cf1565b6118ec676b157e1e4c4b320c60c01b611ae9565b61190067d0dfacf0b7904b8160c01b611ae9565b6001905092915050565b6001805461191790612531565b80601f016020809104026020016040519081016040528092919081815260200182805461194390612531565b80156119905780601f1061196557610100808354040283529160200191611990565b820191906000526020600020905b81548152906001019060200180831161197357829003601f168201915b505050505081565b600080546119a590612531565b80601f01602080910402602001604051908101604052809291908181526020018280546119d190612531565b8015611a1e5780601f106119f357610100808354040283529160200191611a1e565b820191906000526020600020905b815481529060010190602001808311611a0157829003601f168201915b505050505081565b6000611a3c67952c45fd032e873f60c01b611ae9565b611a506763a88970b864f4ae60c01b611ae9565b611a64671878521f27144a1d60c01b611ae9565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b611b0067eeecfd07e18eeb6760c01b611ae9565b611b1467e27f49405a215a4d60c01b611ae9565b611b28678ca38a04d7318b6260c01b611ae9565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bb657611b706732d158688a7f191b60c01b611ae9565b611b846712d417d77e5d382b60c01b611ae9565b6040517f3b719e1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611bca67a05324e8fa818a4860c01b611ae9565b611bde677006811f3262c7a260c01b611ae9565b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c7367ed894d3c139a716760c01b611ae9565b611c8767338fc14beb3de8cb60c01b611ae9565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611ce491906123f0565b60405180910390a3505050565b611d05679ebe3c809e81626c60c01b611ae9565b611d19679c1ce9aeebb0a41d60c01b611ae9565b611d2d675c882be4f2ee9aac60c01b611ae9565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611ddc57611d9667916e7dfca074644a60c01b611ae9565b611daa67775dc03e80ccd20b60c01b611ae9565b6040517fcc3f445400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611df0676879e4f745f12ddd60c01b611ae9565b611e0467b56b9e2a62930b3260c01b611ae9565b611e186778e26319ba1817c060c01b611ae9565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ea657611e6067d6c2f2bc77d9e6ae60c01b611ae9565b611e746769c721afb52cb0d160c01b611ae9565b6040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611eba67b6c7b7bb23bb10e860c01b611ae9565b611ece6701667411db61454560c01b611ae9565b611ee267eabb2fa147844e2b60c01b611ae9565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548210611f8257611f3c6730fb55a5cd59b53560c01b611ae9565b611f50674120356391e4d51f60c01b611ae9565b6040517f5dd58b8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611f96670915d70c29bb6cd660c01b611ae9565b611faa676d8a49972f99124160c01b611ae9565b611fbe67d7a524857ca7438d60c01b611ae9565b8080156120465750600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482115b156120a55761205f6768114374e01cc2af60c01b611ae9565b61207367d944685b4a306a3660c01b611ae9565b6040517f21cb316e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6120b967f14a300c40d6aee360c01b611ae9565b6120cd67b1b522bc0e6fee8460c01b611ae9565b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461211c91906125c5565b9250508190555061213767d601250b4d7e628960c01b611ae9565b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546121869190612591565b925050819055506121a167c8836f05cf3dd6d560c01b611ae9565b6121b567046da5234272fa3760c01b611ae9565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161221291906123f0565b60405180910390a350505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561225a57808201518184015260208101905061223f565b60008484015250505050565b6000601f19601f8301169050919050565b600061228282612220565b61228c818561222b565b935061229c81856020860161223c565b6122a581612266565b840191505092915050565b600060208201905081810360008301526122ca8184612277565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612302826122d7565b9050919050565b612312816122f7565b811461231d57600080fd5b50565b60008135905061232f81612309565b92915050565b6000819050919050565b61234881612335565b811461235357600080fd5b50565b6000813590506123658161233f565b92915050565b60008060408385031215612382576123816122d2565b5b600061239085828601612320565b92505060206123a185828601612356565b9150509250929050565b60008115159050919050565b6123c0816123ab565b82525050565b60006020820190506123db60008301846123b7565b92915050565b6123ea81612335565b82525050565b600060208201905061240560008301846123e1565b92915050565b600080600060608486031215612424576124236122d2565b5b600061243286828701612320565b935050602061244386828701612320565b925050604061245486828701612356565b9150509250925092565b600060ff82169050919050565b6124748161245e565b82525050565b600060208201905061248f600083018461246b565b92915050565b6000602082840312156124ab576124aa6122d2565b5b60006124b984828501612320565b91505092915050565b600080604083850312156124d9576124d86122d2565b5b60006124e785828601612320565b92505060206124f885828601612320565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061254957607f821691505b60208210810361255c5761255b612502565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061259c82612335565b91506125a783612335565b92508282019050808211156125bf576125be612562565b5b92915050565b60006125d082612335565b91506125db83612335565b92508282039050818111156125f3576125f2612562565b5b9291505056fea2646970667358221220cccb2b0e5c2bac544a9ad4c769af9158a44b043572fd5113c5f0731a0598488564736f6c63430008120033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    initialSupply_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      owner_,
      overrides || {}
    ) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    initialSupply_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      owner_,
      overrides || {}
    );
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
