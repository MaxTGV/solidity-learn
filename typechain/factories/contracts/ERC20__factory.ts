/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC20, ERC20Interface } from "../../contracts/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AmountExceedsApproveBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveFromZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "BurnAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "BurnFromZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintOwnerOnly",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApproveAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200221b3803806200221b8339818101604052810190620000379190620003ce565b8460009081620000489190620006d5565b5083600190816200005a9190620006d5565b5082600260006101000a81548160ff021916908360ff1602179055508160038190555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040516200014a9190620007cd565b60405180910390a25050505050620007ea565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001c6826200017b565b810181811067ffffffffffffffff82111715620001e857620001e76200018c565b5b80604052505050565b6000620001fd6200015d565b90506200020b8282620001bb565b919050565b600067ffffffffffffffff8211156200022e576200022d6200018c565b5b62000239826200017b565b9050602081019050919050565b60005b838110156200026657808201518184015260208101905062000249565b60008484015250505050565b600062000289620002838462000210565b620001f1565b905082815260208101848484011115620002a857620002a762000176565b5b620002b584828562000246565b509392505050565b600082601f830112620002d557620002d462000171565b5b8151620002e784826020860162000272565b91505092915050565b600060ff82169050919050565b6200030881620002f0565b81146200031457600080fd5b50565b6000815190506200032881620002fd565b92915050565b6000819050919050565b62000343816200032e565b81146200034f57600080fd5b50565b600081519050620003638162000338565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003968262000369565b9050919050565b620003a88162000389565b8114620003b457600080fd5b50565b600081519050620003c8816200039d565b92915050565b600080600080600060a08688031215620003ed57620003ec62000167565b5b600086015167ffffffffffffffff8111156200040e576200040d6200016c565b5b6200041c88828901620002bd565b955050602086015167ffffffffffffffff81111562000440576200043f6200016c565b5b6200044e88828901620002bd565b9450506040620004618882890162000317565b9350506060620004748882890162000352565b92505060806200048788828901620003b7565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004e757607f821691505b602082108103620004fd57620004fc6200049f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005677fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000528565b62000573868362000528565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005b6620005b0620005aa846200032e565b6200058b565b6200032e565b9050919050565b6000819050919050565b620005d28362000595565b620005ea620005e182620005bd565b84845462000535565b825550505050565b600090565b62000601620005f2565b6200060e818484620005c7565b505050565b5b8181101562000636576200062a600082620005f7565b60018101905062000614565b5050565b601f82111562000685576200064f8162000503565b6200065a8462000518565b810160208510156200066a578190505b62000682620006798562000518565b83018262000613565b50505b505050565b600082821c905092915050565b6000620006aa600019846008026200068a565b1980831691505092915050565b6000620006c5838362000697565b9150826002028217905092915050565b620006e08262000494565b67ffffffffffffffff811115620006fc57620006fb6200018c565b5b620007088254620004ce565b620007158282856200063a565b600060209050601f8311600181146200074d576000841562000738578287015190505b620007448582620006b7565b865550620007b4565b601f1984166200075d8662000503565b60005b82811015620007875784890151825560018201915060208501945060208101905062000760565b86831015620007a75784890151620007a3601f89168262000697565b8355505b6001600288020188555050505b505050505050565b620007c7816200032e565b82525050565b6000602082019050620007e46000830184620007bc565b92915050565b611a2180620007fa6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146102c3578063b09f1266146102f3578063d28d885214610311578063dd62ed3e1461032f57610100565b806370a082311461022957806395d89b41146102595780639dc29fac14610277578063a457c2d71461029357610100565b8063313ce567116100d3578063313ce567146101a157806332424aa3146101bf57806339509351146101dd57806340c10f191461020d57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a91906116a2565b60405180910390f35b61013d6004803603810190610138919061175d565b6103f1565b60405161014a91906117b8565b60405180910390f35b61015b610408565b60405161016891906117e2565b60405180910390f35b61018b600480360381019061018691906117fd565b610412565b60405161019891906117b8565b60405180910390f35b6101a96104bf565b6040516101b6919061186c565b60405180910390f35b6101c76104d6565b6040516101d4919061186c565b60405180910390f35b6101f760048036038101906101f2919061175d565b6104e9565b60405161020491906117b8565b60405180910390f35b6102276004803603810190610222919061175d565b610784565b005b610243600480360381019061023e9190611887565b610998565b60405161025091906117e2565b60405180910390f35b6102616109e1565b60405161026e91906116a2565b60405180910390f35b610291600480360381019061028c919061175d565b610a73565b005b6102ad60048036038101906102a8919061175d565b610cff565b6040516102ba91906117b8565b60405180910390f35b6102dd60048036038101906102d8919061175d565b611050565b6040516102ea91906117b8565b60405180910390f35b6102fb611069565b60405161030891906116a2565b60405180910390f35b6103196110f7565b60405161032691906116a2565b60405180910390f35b610349600480360381019061034491906118b4565b611185565b60405161035691906117e2565b60405180910390f35b60606000805461036e90611923565b80601f016020809104026020016040519081016040528092919081815260200182805461039a90611923565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b60006103fe33848461120c565b6001905092915050565b6000600354905090565b6000610421848484600161135d565b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ad9190611983565b92505081905550600190509392505050565b6000600260009054906101000a900460ff16905090565b600260009054906101000a900460ff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610550576040517f3b719e1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610606576040517ff0f0ff1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461069291906119b7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161077291906117e2565b60405180910390a36001905092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461080b576040517fcc3f445400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610871576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003600082825461088391906119b7565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108d991906119b7565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858260405161092691906117e2565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161098c91906117e2565b60405180910390a35050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546109f090611923565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1c90611923565b8015610a695780601f10610a3e57610100808354040283529160200191610a69565b820191906000526020600020905b815481529060010190602001808311610a4c57829003601f168201915b5050505050905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610afa576040517fcc3f445400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b60576040517fb817eee700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548110610bd8576040517f177466fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000828254610bea9190611983565b9250508190555080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c409190611983565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca582604051610c8d91906117e2565b60405180910390a2600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cf391906117e2565b60405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d66576040517f3b719e1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610e1c576040517ff0f0ff1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610ed2576040517f21cb316e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f5e9190611983565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161103e91906117e2565b60405180910390a36001905092915050565b600061105f338484600061135d565b6001905092915050565b6001805461107690611923565b80601f01602080910402602001604051908101604052809291908181526020018280546110a290611923565b80156110ef5780601f106110c4576101008083540402835291602001916110ef565b820191906000526020600020905b8154815290600101906020018083116110d257829003601f168201915b505050505081565b6000805461110490611923565b80601f016020809104026020016040519081016040528092919081815260200182805461113090611923565b801561117d5780601f106111525761010080835404028352916020019161117d565b820191906000526020600020905b81548152906001019060200180831161116057829003601f168201915b505050505081565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611272576040517f3b719e1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161135091906117e2565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113c3576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561143c576040517f5dd58b8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080156114c45750600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482115b156114fb576040517f21cb316e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461154a9190611983565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115a091906119b7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161160491906117e2565b60405180910390a350505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561164c578082015181840152602081019050611631565b60008484015250505050565b6000601f19601f8301169050919050565b600061167482611612565b61167e818561161d565b935061168e81856020860161162e565b61169781611658565b840191505092915050565b600060208201905081810360008301526116bc8184611669565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116f4826116c9565b9050919050565b611704816116e9565b811461170f57600080fd5b50565b600081359050611721816116fb565b92915050565b6000819050919050565b61173a81611727565b811461174557600080fd5b50565b60008135905061175781611731565b92915050565b60008060408385031215611774576117736116c4565b5b600061178285828601611712565b925050602061179385828601611748565b9150509250929050565b60008115159050919050565b6117b28161179d565b82525050565b60006020820190506117cd60008301846117a9565b92915050565b6117dc81611727565b82525050565b60006020820190506117f760008301846117d3565b92915050565b600080600060608486031215611816576118156116c4565b5b600061182486828701611712565b935050602061183586828701611712565b925050604061184686828701611748565b9150509250925092565b600060ff82169050919050565b61186681611850565b82525050565b6000602082019050611881600083018461185d565b92915050565b60006020828403121561189d5761189c6116c4565b5b60006118ab84828501611712565b91505092915050565b600080604083850312156118cb576118ca6116c4565b5b60006118d985828601611712565b92505060206118ea85828601611712565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061193b57607f821691505b60208210810361194e5761194d6118f4565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061198e82611727565b915061199983611727565b92508282039050818111156119b1576119b0611954565b5b92915050565b60006119c282611727565b91506119cd83611727565b92508282019050808211156119e5576119e4611954565b5b9291505056fea26469706673582212207445a7983f65bbb67f112688157846a65e318aafe4620c852065a0de2b58015364736f6c63430008120033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    initialSupply_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      owner_,
      overrides || {}
    ) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    initialSupply_: PromiseOrValue<BigNumberish>,
    owner_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      owner_,
      overrides || {}
    );
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
