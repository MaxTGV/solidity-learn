/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MyERC721,
  MyERC721Interface,
} from "../../../contracts/ERC721.sol/MyERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721ReceiverReject",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerNotFoundError",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotApprovedForTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenOwnerNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenURINotFoundError",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAllEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TransferEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f6a38038062001f6a8339818101604052810190620000379190620001f6565b8160049081620000489190620004c6565b5080600590816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b6119ad80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e9919061100b565b6102bc565b6040516100fb9190611053565b60405180910390f35b61010c6102c3565b60405161011991906110fe565b60405180910390f35b61013c60048036038101906101379190611156565b610355565b60405161014991906111c4565b60405180910390f35b61016c6004803603810190610167919061120b565b610471565b005b6101886004803603810190610183919061124b565b610595565b005b6101a4600480360381019061019f919061124b565b6106ad565b005b6101c060048036038101906101bb9190611156565b6106b2565b6040516101cd91906111c4565b60405180910390f35b6101f060048036038101906101eb919061129e565b610759565b6040516101fd91906112da565b60405180910390f35b61020e6107a2565b60405161021b91906110fe565b60405180910390f35b61023e60048036038101906102399190611321565b610834565b005b61025a60048036038101906102559190611496565b6109a5565b005b61027660048036038101906102719190611156565b6109f8565b60405161028391906110fe565b60405180910390f35b6102a660048036038101906102a19190611519565b610a68565b6040516102b39190611053565b60405180910390f35b6000919050565b6060600480546102d290611588565b80601f01602080910402602001604051908101604052809291908181526020018280546102fe90611588565b801561034b5780601f106103205761010080835404028352916020019161034b565b820191906000526020600020905b81548152906001019060200180831161032e57829003601f168201915b5050505050905090565b600080610361836106b2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103c9576040517f711ea30a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610467576040517f6a76b03700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8092505050919050565b600061047c826106b2565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104e3576040517f59dc379f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006105a0826106b2565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156106655750600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b1561069c576040517fb9eee67900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106a7848484610afc565b50505050565b505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610750576040517f0d7b5c5200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600580546107b190611588565b80601f01602080910402602001604051908101604052809291908181526020018280546107dd90611588565b801561082a5780601f106107ff5761010080835404028352916020019161082a565b820191906000526020600020905b81548152906001019060200180831161080d57829003601f168201915b5050505050905090565b60003390508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e9061162b565b60405180910390fd5b81600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f87e3cee377c3fa4779be46681dd00e73cc64a9fa7f172900550261128059391a846040516109989190611053565b60405180910390a3505050565b6109b0848484610595565b6109bc84848484610cc9565b6109f2576040517ffa34343f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6060610a0382610dbb565b610a39576040517ffe20270b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a4282610e26565b604051602001610a5291906116d3565b6040516020818303038152906040529050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b62576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bb19190611724565b9250508190555060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c079190611758565b925050819055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167feaf1c4b3ce0f4f62a2bae7eb3e68225c75f7e6ff4422073b7437b9a78d25f17083604051610cbc91906112da565b60405180910390a3505050565b6000610cd484610f86565b610ce15760019050610db3565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401610d2294939291906117e1565b6020604051808303816000875af1158015610d41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d659190611842565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b606060008203610e6d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610f81565b600082905060005b60008214610e9f578080610e889061186f565b915050600a82610e9891906118e6565b9150610e75565b60008167ffffffffffffffff811115610ebb57610eba61136b565b5b6040519080825280601f01601f191660200182016040528015610eed5781602001600182028036833780820191505090505b5090505b60008514610f7a57600182610f069190611724565b9150600a85610f159190611917565b6030610f219190611758565b60f81b818381518110610f3757610f36611948565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610f7391906118e6565b9450610ef1565b8093505050505b919050565b600080823b905060008163ffffffff1611915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610fe881610fb3565b8114610ff357600080fd5b50565b60008135905061100581610fdf565b92915050565b60006020828403121561102157611020610fa9565b5b600061102f84828501610ff6565b91505092915050565b60008115159050919050565b61104d81611038565b82525050565b60006020820190506110686000830184611044565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110a857808201518184015260208101905061108d565b60008484015250505050565b6000601f19601f8301169050919050565b60006110d08261106e565b6110da8185611079565b93506110ea81856020860161108a565b6110f3816110b4565b840191505092915050565b6000602082019050818103600083015261111881846110c5565b905092915050565b6000819050919050565b61113381611120565b811461113e57600080fd5b50565b6000813590506111508161112a565b92915050565b60006020828403121561116c5761116b610fa9565b5b600061117a84828501611141565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111ae82611183565b9050919050565b6111be816111a3565b82525050565b60006020820190506111d960008301846111b5565b92915050565b6111e8816111a3565b81146111f357600080fd5b50565b600081359050611205816111df565b92915050565b6000806040838503121561122257611221610fa9565b5b6000611230858286016111f6565b925050602061124185828601611141565b9150509250929050565b60008060006060848603121561126457611263610fa9565b5b6000611272868287016111f6565b9350506020611283868287016111f6565b925050604061129486828701611141565b9150509250925092565b6000602082840312156112b4576112b3610fa9565b5b60006112c2848285016111f6565b91505092915050565b6112d481611120565b82525050565b60006020820190506112ef60008301846112cb565b92915050565b6112fe81611038565b811461130957600080fd5b50565b60008135905061131b816112f5565b92915050565b6000806040838503121561133857611337610fa9565b5b6000611346858286016111f6565b92505060206113578582860161130c565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113a3826110b4565b810181811067ffffffffffffffff821117156113c2576113c161136b565b5b80604052505050565b60006113d5610f9f565b90506113e1828261139a565b919050565b600067ffffffffffffffff8211156114015761140061136b565b5b61140a826110b4565b9050602081019050919050565b82818337600083830152505050565b6000611439611434846113e6565b6113cb565b90508281526020810184848401111561145557611454611366565b5b611460848285611417565b509392505050565b600082601f83011261147d5761147c611361565b5b813561148d848260208601611426565b91505092915050565b600080600080608085870312156114b0576114af610fa9565b5b60006114be878288016111f6565b94505060206114cf878288016111f6565b93505060406114e087828801611141565b925050606085013567ffffffffffffffff81111561150157611500610fae565b5b61150d87828801611468565b91505092959194509250565b600080604083850312156115305761152f610fa9565b5b600061153e858286016111f6565b925050602061154f858286016111f6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806115a057607f821691505b6020821081036115b3576115b2611559565b5b50919050565b7f4552433732313a2073657474696e6720617070726f76616c207374617475732060008201527f666f722073656c66000000000000000000000000000000000000000000000000602082015250565b6000611615602883611079565b9150611620826115b9565b604082019050919050565b6000602082019050818103600083015261164481611608565b9050919050565b600081905092915050565b7f68747470733a2f2f6d796170692e636f6d2f746f6b656e2f0000000000000000600082015250565b600061168c60188361164b565b915061169782611656565b601882019050919050565b60006116ad8261106e565b6116b7818561164b565b93506116c781856020860161108a565b80840191505092915050565b60006116de8261167f565b91506116ea82846116a2565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061172f82611120565b915061173a83611120565b9250828203905081811115611752576117516116f5565b5b92915050565b600061176382611120565b915061176e83611120565b9250828201905080821115611786576117856116f5565b5b92915050565b600081519050919050565b600082825260208201905092915050565b60006117b38261178c565b6117bd8185611797565b93506117cd81856020860161108a565b6117d6816110b4565b840191505092915050565b60006080820190506117f660008301876111b5565b61180360208301866111b5565b61181060408301856112cb565b818103606083015261182281846117a8565b905095945050505050565b60008151905061183c81610fdf565b92915050565b60006020828403121561185857611857610fa9565b5b60006118668482850161182d565b91505092915050565b600061187a82611120565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118ac576118ab6116f5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006118f182611120565b91506118fc83611120565b92508261190c5761190b6118b7565b5b828204905092915050565b600061192282611120565b915061192d83611120565b92508261193d5761193c6118b7565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220e125af0ca826bfd8136b78b96fa2693e8eaad22b3b14186ea9e221877cbfd0f564736f6c63430008120033";

type MyERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyERC721__factory extends ContractFactory {
  constructor(...args: MyERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<MyERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): MyERC721 {
    return super.attach(address) as MyERC721;
  }
  override connect(signer: Signer): MyERC721__factory {
    return super.connect(signer) as MyERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC721Interface {
    return new utils.Interface(_abi) as MyERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyERC721 {
    return new Contract(address, _abi, signerOrProvider) as MyERC721;
  }
}
