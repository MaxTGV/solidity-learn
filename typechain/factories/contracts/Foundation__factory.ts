/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Foundation,
  FoundationInterface,
} from "../../contracts/Foundation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_donationReceiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDonation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "donations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donationsReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSumOfDonations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendFundsToReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405260405162001779380380620017798339818101604052810190620000299190620004cc565b620000496200003d6200010260201b60201c565b6200010a60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600390816200008e91906200077d565b506000341115620000fa57620000a9620001ce60201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff167f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c5234604051620000f1919062000875565b60405180910390a25b5050620008fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036200027a576002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002cb9190620008c1565b92505081905550565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200031582620002e8565b9050919050565b620003278162000308565b81146200033357600080fd5b50565b60008151905062000347816200031c565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003a28262000357565b810181811067ffffffffffffffff82111715620003c457620003c362000368565b5b80604052505050565b6000620003d9620002d4565b9050620003e7828262000397565b919050565b600067ffffffffffffffff8211156200040a576200040962000368565b5b620004158262000357565b9050602081019050919050565b60005b838110156200044257808201518184015260208101905062000425565b60008484015250505050565b6000620004656200045f84620003ec565b620003cd565b90508281526020810184848401111562000484576200048362000352565b5b6200049184828562000422565b509392505050565b600082601f830112620004b157620004b06200034d565b5b8151620004c38482602086016200044e565b91505092915050565b60008060408385031215620004e657620004e5620002de565b5b6000620004f68582860162000336565b925050602083015167ffffffffffffffff8111156200051a5762000519620002e3565b5b620005288582860162000499565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200058557607f821691505b6020821081036200059b576200059a6200053d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005c6565b620006118683620005c6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200065e62000658620006528462000629565b62000633565b62000629565b9050919050565b6000819050919050565b6200067a836200063d565b62000692620006898262000665565b848454620005d3565b825550505050565b600090565b620006a96200069a565b620006b68184846200066f565b505050565b5b81811015620006de57620006d26000826200069f565b600181019050620006bc565b5050565b601f8211156200072d57620006f781620005a1565b6200070284620005b6565b8101602085101562000712578190505b6200072a6200072185620005b6565b830182620006bb565b50505b505050565b600082821c905092915050565b6000620007526000198460080262000732565b1980831691505092915050565b60006200076d83836200073f565b9150826002028217905092915050565b620007888262000532565b67ffffffffffffffff811115620007a457620007a362000368565b5b620007b082546200056c565b620007bd828285620006e2565b600060209050601f831160018114620007f55760008415620007e0578287015190505b620007ec85826200075f565b8655506200085c565b601f1984166200080586620005a1565b60005b828110156200082f5784890151825560018201915060208501945060208101905062000808565b868310156200084f57848901516200084b601f8916826200073f565b8355505b6001600288020188555050505b505050505050565b6200086f8162000629565b82525050565b60006020820190506200088c600083018462000864565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008ce8262000629565b9150620008db8362000629565b9250828201905080821115620008f657620008f562000892565b5b92915050565b608051610e5a6200091f6000396000818161040d01526106270152610e5a6000f3fe6080604052600436106100a05760003560e01c8063bf1482fa11610064578063bf1482fa146101d5578063cc6cb19a14610200578063d5ee15571461023d578063ed88c68e14610268578063f2fde38b14610272578063f3a014891461029b576100fd565b80630bcd177e14610102578063715018a61461012b5780637284e416146101425780638da5cb5b1461016d578063ac62f56614610198576100fd565b366100fd576100ad6102c6565b3373ffffffffffffffffffffffffffffffffffffffff167f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c52346040516100f3919061092c565b60405180910390a2005b600080fd5b34801561010e57600080fd5b5061012960048036038101906101249190610978565b6103c9565b005b34801561013757600080fd5b50610140610475565b005b34801561014e57600080fd5b50610157610489565b6040516101649190610a35565b60405180910390f35b34801561017957600080fd5b50610182610517565b60405161018f9190610a98565b60405180910390f35b3480156101a457600080fd5b506101bf60048036038101906101ba9190610978565b610540565b6040516101cc9190610a98565b60405180910390f35b3480156101e157600080fd5b506101ea61057f565b6040516101f79190610b71565b60405180910390f35b34801561020c57600080fd5b5061022760048036038101906102229190610bbf565b61060d565b604051610234919061092c565b60405180910390f35b34801561024957600080fd5b50610252610625565b60405161025f9190610a98565b60405180910390f35b610270610649565b005b34801561027e57600080fd5b5061029960048036038101906102949190610bbf565b61068d565b005b3480156102a757600080fd5b506102b0610710565b6040516102bd919061092c565b60405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610371576002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103c09190610c1b565b92505081905550565b6103d16107c9565b4781111561040b576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610471573d6000803e3d6000fd5b5050565b61047d6107c9565b6104876000610847565b565b6003805461049690610c7e565b80601f01602080910402602001604051908101604052809291908181526020018280546104c290610c7e565b801561050f5780601f106104e45761010080835404028352916020019161050f565b820191906000526020600020905b8154815290600101906020018083116104f257829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002818154811061055057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600280548060200260200160405190810160405280929190818152602001828054801561060357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105b9575b5050505050905090565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60003403610683576040517fed0a901a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61068b6102c6565b565b6106956107c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fb90610d21565b60405180910390fd5b61070d81610847565b50565b60008060005b6002805490508110156107c157600160006002838154811061073b5761073a610d41565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826107ac9190610c1b565b915080806107b990610d70565b915050610716565b508091505090565b6107d161090b565b73ffffffffffffffffffffffffffffffffffffffff166107ef610517565b73ffffffffffffffffffffffffffffffffffffffff1614610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90610e04565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61092681610913565b82525050565b6000602082019050610941600083018461091d565b92915050565b600080fd5b61095581610913565b811461096057600080fd5b50565b6000813590506109728161094c565b92915050565b60006020828403121561098e5761098d610947565b5b600061099c84828501610963565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109df5780820151818401526020810190506109c4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a07826109a5565b610a1181856109b0565b9350610a218185602086016109c1565b610a2a816109eb565b840191505092915050565b60006020820190508181036000830152610a4f81846109fc565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8282610a57565b9050919050565b610a9281610a77565b82525050565b6000602082019050610aad6000830184610a89565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ae881610a77565b82525050565b6000610afa8383610adf565b60208301905092915050565b6000602082019050919050565b6000610b1e82610ab3565b610b288185610abe565b9350610b3383610acf565b8060005b83811015610b64578151610b4b8882610aee565b9750610b5683610b06565b925050600181019050610b37565b5085935050505092915050565b60006020820190508181036000830152610b8b8184610b13565b905092915050565b610b9c81610a77565b8114610ba757600080fd5b50565b600081359050610bb981610b93565b92915050565b600060208284031215610bd557610bd4610947565b5b6000610be384828501610baa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2682610913565b9150610c3183610913565b9250828201905080821115610c4957610c48610bec565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c9657607f821691505b602082108103610ca957610ca8610c4f565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d0b6026836109b0565b9150610d1682610caf565b604082019050919050565b60006020820190508181036000830152610d3a81610cfe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d7b82610913565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610dad57610dac610bec565b5b600182019050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610dee6020836109b0565b9150610df982610db8565b602082019050919050565b60006020820190508181036000830152610e1d81610de1565b905091905056fea26469706673582212207036e418f152ba57e93c6985fa3db0780b61427c24d92e8a6871be0a82ec8ef764736f6c63430008120033";

type FoundationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FoundationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Foundation__factory extends ContractFactory {
  constructor(...args: FoundationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _donationReceiver: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Foundation> {
    return super.deploy(
      _donationReceiver,
      _description,
      overrides || {}
    ) as Promise<Foundation>;
  }
  override getDeployTransaction(
    _donationReceiver: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _donationReceiver,
      _description,
      overrides || {}
    );
  }
  override attach(address: string): Foundation {
    return super.attach(address) as Foundation;
  }
  override connect(signer: Signer): Foundation__factory {
    return super.connect(signer) as Foundation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FoundationInterface {
    return new utils.Interface(_abi) as FoundationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Foundation {
    return new Contract(address, _abi, signerOrProvider) as Foundation;
  }
}
