/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MockERC1155Receiver,
  MockERC1155ReceiverInterface,
} from "../../contracts/MockERC1155Receiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610567806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610168565b6100d6565b60405161006d91906101b0565b60405180910390f35b610090600480360381019061008b91906102e4565b6100dd565b60405161009d91906103cf565b60405180910390f35b6100c060048036038101906100bb9190610420565b6100eb565b6040516100cd91906103cf565b60405180910390f35b6000919050565b600098975050505050505050565b60008282906100fa91906104d2565b90509695505050505050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61014581610110565b811461015057600080fd5b50565b6000813590506101628161013c565b92915050565b60006020828403121561017e5761017d610106565b5b600061018c84828501610153565b91505092915050565b60008115159050919050565b6101aa81610195565b82525050565b60006020820190506101c560008301846101a1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f6826101cb565b9050919050565b610206816101eb565b811461021157600080fd5b50565b600081359050610223816101fd565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261024e5761024d610229565b5b8235905067ffffffffffffffff81111561026b5761026a61022e565b5b60208301915083602082028301111561028757610286610233565b5b9250929050565b60008083601f8401126102a4576102a3610229565b5b8235905067ffffffffffffffff8111156102c1576102c061022e565b5b6020830191508360018202830111156102dd576102dc610233565b5b9250929050565b60008060008060008060008060a0898b03121561030457610303610106565b5b60006103128b828c01610214565b98505060206103238b828c01610214565b975050604089013567ffffffffffffffff8111156103445761034361010b565b5b6103508b828c01610238565b9650965050606089013567ffffffffffffffff8111156103735761037261010b565b5b61037f8b828c01610238565b9450945050608089013567ffffffffffffffff8111156103a2576103a161010b565b5b6103ae8b828c0161028e565b92509250509295985092959890939650565b6103c981610110565b82525050565b60006020820190506103e460008301846103c0565b92915050565b6000819050919050565b6103fd816103ea565b811461040857600080fd5b50565b60008135905061041a816103f4565b92915050565b60008060008060008060a0878903121561043d5761043c610106565b5b600061044b89828a01610214565b965050602061045c89828a01610214565b955050604061046d89828a0161040b565b945050606061047e89828a0161040b565b935050608087013567ffffffffffffffff81111561049f5761049e61010b565b5b6104ab89828a0161028e565b92509250509295509295509295565b600082905092915050565b600082821b905092915050565b60006104de83836104ba565b826104e98135610110565b92506004821015610529576105247fffffffff00000000000000000000000000000000000000000000000000000000836004036008026104c5565b831692505b50509291505056fea2646970667358221220a38d412c9c86d48809064fed01e61ecfa266bddfd48cdd617ce976a9cb89836264736f6c63430008120033";

type MockERC1155ReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155Receiver__factory extends ContractFactory {
  constructor(...args: MockERC1155ReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC1155Receiver> {
    return super.deploy(overrides || {}) as Promise<MockERC1155Receiver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC1155Receiver {
    return super.attach(address) as MockERC1155Receiver;
  }
  override connect(signer: Signer): MockERC1155Receiver__factory {
    return super.connect(signer) as MockERC1155Receiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155ReceiverInterface {
    return new utils.Interface(_abi) as MockERC1155ReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155Receiver {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155Receiver;
  }
}
