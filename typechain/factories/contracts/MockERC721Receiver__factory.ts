/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MockERC721Receiver,
  MockERC721ReceiverInterface,
} from "../../contracts/MockERC721Receiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610308806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061017d565b610060565b6040516100579190610240565b60405180910390f35b600082829061006f9190610273565b905095945050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100af82610084565b9050919050565b6100bf816100a4565b81146100ca57600080fd5b50565b6000813590506100dc816100b6565b92915050565b6000819050919050565b6100f5816100e2565b811461010057600080fd5b50565b600081359050610112816100ec565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261013d5761013c610118565b5b8235905067ffffffffffffffff81111561015a5761015961011d565b5b60208301915083600182028301111561017657610175610122565b5b9250929050565b6000806000806000608086880312156101995761019861007a565b5b60006101a7888289016100cd565b95505060206101b8888289016100cd565b94505060406101c988828901610103565b935050606086013567ffffffffffffffff8111156101ea576101e961007f565b5b6101f688828901610127565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61023a81610205565b82525050565b60006020820190506102556000830184610231565b92915050565b600082905092915050565b600082821b905092915050565b600061027f838361025b565b8261028a8135610205565b925060048210156102ca576102c57fffffffff0000000000000000000000000000000000000000000000000000000083600403600802610266565b831692505b50509291505056fea2646970667358221220c62f2ae7fabd3707602008ea70f6d6a3f5dac6abc66cafa34940c7482737571a64736f6c63430008120033";

type MockERC721ReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721Receiver__factory extends ContractFactory {
  constructor(...args: MockERC721ReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC721Receiver> {
    return super.deploy(overrides || {}) as Promise<MockERC721Receiver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC721Receiver {
    return super.attach(address) as MockERC721Receiver;
  }
  override connect(signer: Signer): MockERC721Receiver__factory {
    return super.connect(signer) as MockERC721Receiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721ReceiverInterface {
    return new utils.Interface(_abi) as MockERC721ReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721Receiver {
    return new Contract(address, _abi, signerOrProvider) as MockERC721Receiver;
  }
}
