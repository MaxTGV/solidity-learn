/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { MyERC1155, MyERC1155Interface } from "../../contracts/MyERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ArraysLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferNonERC1155ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferRejectedByRecipient",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612131806100616000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063a22cb46511610071578063a22cb465146101b0578063bc197c81146101cc578063e985e9c5146101fc578063f23a6e611461022c578063f242432a1461025c578063f5298aca14610278576100b3565b8062fdd58e146100b857806301ffc9a7146100e85780630e89341c14610118578063156e29f6146101485780632eb2c2d6146101645780634e1273f414610180575b600080fd5b6100d260048036038101906100cd919061125e565b610294565b6040516100df91906112ad565b60405180910390f35b61010260048036038101906100fd9190611320565b6102ee565b60405161010f9190611368565b60405180910390f35b610132600480360381019061012d9190611383565b6103c0565b60405161013f9190611440565b60405180910390f35b610162600480360381019061015d9190611462565b6103e9565b005b61017e600480360381019061017991906116b2565b61055a565b005b61019a60048036038101906101959190611844565b6108d5565b6040516101a7919061197a565b60405180910390f35b6101ca60048036038101906101c591906119c8565b6109e7565b005b6101e660048036038101906101e19190611ab9565b610ae4565b6040516101f39190611ba4565b60405180910390f35b61021660048036038101906102119190611bbf565b610af2565b6040516102239190611368565b60405180910390f35b61024660048036038101906102419190611bff565b610b86565b6040516102539190611ba4565b60405180910390f35b61027660048036038101906102719190611c99565b610b92565b005b610292600480360381019061028d9190611462565b610df4565b005b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103b957507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060816040516020016103d39190611da8565b6040516020818303038152906040529050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610470576040517f59dc379f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546104cf9190611dfd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161054d929190611e31565b60405180910390a4505050565b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415801561059d575061059b8533610af2565b155b156105d4576040517f356d97ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815183511461060f576040517ffc23596000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b835181101561084f5760008482815181106106305761062f611e5a565b5b60200260200101519050600084838151811061064f5761064e611e5a565b5b60200260200101519050806000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205410156106e2576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546107419190611e89565b92505081905550806000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546107a79190611dfd565b925050819055508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610824929190611e31565b60405180910390a461083a338989858589610fee565b5050808061084790611ebd565b915050610612565b508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516108c6929190611f05565b60405180910390a45050505050565b60608151835114610912576040517ffc23596000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000835167ffffffffffffffff81111561092f5761092e6114ba565b5b60405190808252806020026020018201604052801561095d5781602001602082028036833780820191505090505b50905060005b84518110156109dc576109aa85828151811061098257610981611e5a565b5b602002602001015185838151811061099d5761099c611e5a565b5b6020026020010151610294565b8282815181106109bd576109bc611e5a565b5b60200260200101818152505080806109d490611ebd565b915050610963565b508091505092915050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ad89190611368565b60405180910390a35050565b600098975050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60009695505050505050565b3373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614158015610bd55750610bd38533610af2565b155b15610c0c576040517f356d97ca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020541015610c95576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000828254610cf49190611e89565b92505081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000828254610d5a9190611dfd565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628686604051610dd7929190611e31565b60405180910390a4610ded338686868686610fee565b5050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e7b576040517f59dc379f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015610f04576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610f639190611e89565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610fe1929190611e31565b60405180910390a4505050565b610ff78461119d565b15611195578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161103d959493929190611fa0565b6020604051808303816000875af192505050801561107957506040513d601f19601f82011682018060405250810190611076919061200f565b60015b61111557611085612049565b806308c379a0036110e1575061109961206b565b806110a457506110e3565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d89190611440565b60405180910390fd5b505b6040517f3c33610400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611193576040517fc867619500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b505050505050565b600080823b905060008163ffffffff1611915050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f5826111ca565b9050919050565b611205816111ea565b811461121057600080fd5b50565b600081359050611222816111fc565b92915050565b6000819050919050565b61123b81611228565b811461124657600080fd5b50565b60008135905061125881611232565b92915050565b60008060408385031215611275576112746111c0565b5b600061128385828601611213565b925050602061129485828601611249565b9150509250929050565b6112a781611228565b82525050565b60006020820190506112c2600083018461129e565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112fd816112c8565b811461130857600080fd5b50565b60008135905061131a816112f4565b92915050565b600060208284031215611336576113356111c0565b5b60006113448482850161130b565b91505092915050565b60008115159050919050565b6113628161134d565b82525050565b600060208201905061137d6000830184611359565b92915050565b600060208284031215611399576113986111c0565b5b60006113a784828501611249565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113ea5780820151818401526020810190506113cf565b60008484015250505050565b6000601f19601f8301169050919050565b6000611412826113b0565b61141c81856113bb565b935061142c8185602086016113cc565b611435816113f6565b840191505092915050565b6000602082019050818103600083015261145a8184611407565b905092915050565b60008060006060848603121561147b5761147a6111c0565b5b600061148986828701611213565b935050602061149a86828701611249565b92505060406114ab86828701611249565b9150509250925092565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114f2826113f6565b810181811067ffffffffffffffff82111715611511576115106114ba565b5b80604052505050565b60006115246111b6565b905061153082826114e9565b919050565b600067ffffffffffffffff8211156115505761154f6114ba565b5b602082029050602081019050919050565b600080fd5b600061157961157484611535565b61151a565b9050808382526020820190506020840283018581111561159c5761159b611561565b5b835b818110156115c557806115b18882611249565b84526020840193505060208101905061159e565b5050509392505050565b600082601f8301126115e4576115e36114b5565b5b81356115f4848260208601611566565b91505092915050565b600080fd5b600067ffffffffffffffff82111561161d5761161c6114ba565b5b611626826113f6565b9050602081019050919050565b82818337600083830152505050565b600061165561165084611602565b61151a565b905082815260208101848484011115611671576116706115fd565b5b61167c848285611633565b509392505050565b600082601f830112611699576116986114b5565b5b81356116a9848260208601611642565b91505092915050565b600080600080600060a086880312156116ce576116cd6111c0565b5b60006116dc88828901611213565b95505060206116ed88828901611213565b945050604086013567ffffffffffffffff81111561170e5761170d6111c5565b5b61171a888289016115cf565b935050606086013567ffffffffffffffff81111561173b5761173a6111c5565b5b611747888289016115cf565b925050608086013567ffffffffffffffff811115611768576117676111c5565b5b61177488828901611684565b9150509295509295909350565b600067ffffffffffffffff82111561179c5761179b6114ba565b5b602082029050602081019050919050565b60006117c06117bb84611781565b61151a565b905080838252602082019050602084028301858111156117e3576117e2611561565b5b835b8181101561180c57806117f88882611213565b8452602084019350506020810190506117e5565b5050509392505050565b600082601f83011261182b5761182a6114b5565b5b813561183b8482602086016117ad565b91505092915050565b6000806040838503121561185b5761185a6111c0565b5b600083013567ffffffffffffffff811115611879576118786111c5565b5b61188585828601611816565b925050602083013567ffffffffffffffff8111156118a6576118a56111c5565b5b6118b2858286016115cf565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118f181611228565b82525050565b600061190383836118e8565b60208301905092915050565b6000602082019050919050565b6000611927826118bc565b61193181856118c7565b935061193c836118d8565b8060005b8381101561196d57815161195488826118f7565b975061195f8361190f565b925050600181019050611940565b5085935050505092915050565b60006020820190508181036000830152611994818461191c565b905092915050565b6119a58161134d565b81146119b057600080fd5b50565b6000813590506119c28161199c565b92915050565b600080604083850312156119df576119de6111c0565b5b60006119ed85828601611213565b92505060206119fe858286016119b3565b9150509250929050565b600080fd5b60008083601f840112611a2357611a226114b5565b5b8235905067ffffffffffffffff811115611a4057611a3f611a08565b5b602083019150836020820283011115611a5c57611a5b611561565b5b9250929050565b60008083601f840112611a7957611a786114b5565b5b8235905067ffffffffffffffff811115611a9657611a95611a08565b5b602083019150836001820283011115611ab257611ab1611561565b5b9250929050565b60008060008060008060008060a0898b031215611ad957611ad86111c0565b5b6000611ae78b828c01611213565b9850506020611af88b828c01611213565b975050604089013567ffffffffffffffff811115611b1957611b186111c5565b5b611b258b828c01611a0d565b9650965050606089013567ffffffffffffffff811115611b4857611b476111c5565b5b611b548b828c01611a0d565b9450945050608089013567ffffffffffffffff811115611b7757611b766111c5565b5b611b838b828c01611a63565b92509250509295985092959890939650565b611b9e816112c8565b82525050565b6000602082019050611bb96000830184611b95565b92915050565b60008060408385031215611bd657611bd56111c0565b5b6000611be485828601611213565b9250506020611bf585828601611213565b9150509250929050565b60008060008060008060a08789031215611c1c57611c1b6111c0565b5b6000611c2a89828a01611213565b9650506020611c3b89828a01611213565b9550506040611c4c89828a01611249565b9450506060611c5d89828a01611249565b935050608087013567ffffffffffffffff811115611c7e57611c7d6111c5565b5b611c8a89828a01611a63565b92509250509295509295509295565b600080600080600060a08688031215611cb557611cb46111c0565b5b6000611cc388828901611213565b9550506020611cd488828901611213565b9450506040611ce588828901611249565b9350506060611cf688828901611249565b925050608086013567ffffffffffffffff811115611d1757611d166111c5565b5b611d2388828901611684565b9150509295509295909350565b600081905092915050565b7f68747470733a2f2f6d796170692e636f6d2f746f6b656e2f0000000000000000600082015250565b6000611d71601883611d30565b9150611d7c82611d3b565b601882019050919050565b6000819050919050565b611da2611d9d82611228565b611d87565b82525050565b6000611db382611d64565b9150611dbf8284611d91565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e0882611228565b9150611e1383611228565b9250828201905080821115611e2b57611e2a611dce565b5b92915050565b6000604082019050611e46600083018561129e565b611e53602083018461129e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611e9482611228565b9150611e9f83611228565b9250828203905081811115611eb757611eb6611dce565b5b92915050565b6000611ec882611228565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611efa57611ef9611dce565b5b600182019050919050565b60006040820190508181036000830152611f1f818561191c565b90508181036020830152611f33818461191c565b90509392505050565b611f45816111ea565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611f7282611f4b565b611f7c8185611f56565b9350611f8c8185602086016113cc565b611f95816113f6565b840191505092915050565b600060a082019050611fb56000830188611f3c565b611fc26020830187611f3c565b611fcf604083018661129e565b611fdc606083018561129e565b8181036080830152611fee8184611f67565b90509695505050505050565b600081519050612009816112f4565b92915050565b600060208284031215612025576120246111c0565b5b600061203384828501611ffa565b91505092915050565b60008160e01c9050919050565b600060033d11156120685760046000803e61206560005161203c565b90505b90565b600060443d106120f85761207d6111b6565b60043d036004823e80513d602482011167ffffffffffffffff821117156120a55750506120f8565b808201805167ffffffffffffffff8111156120c357505050506120f8565b80602083010160043d0385018111156120e05750505050506120f8565b6120ef826020018501866114e9565b82955050505050505b9056fea264697066735822122097370aacdb9624de068f012b26404466df1bc7a408a44f234eab088452284d6764736f6c63430008120033";

type MyERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyERC1155__factory extends ContractFactory {
  constructor(...args: MyERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyERC1155> {
    return super.deploy(overrides || {}) as Promise<MyERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyERC1155 {
    return super.attach(address) as MyERC1155;
  }
  override connect(signer: Signer): MyERC1155__factory {
    return super.connect(signer) as MyERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC1155Interface {
    return new utils.Interface(_abi) as MyERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MyERC1155;
  }
}
