/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { MyERC721, MyERC721Interface } from "../../contracts/MyERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BurnOfNonOwnedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerNotFoundError",
    type: "error",
  },
  {
    inputs: [],
    name: "SettingApprovalStatusFroSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotApprovedForTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenOwnerNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenURINotFoundError",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferAmountExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferRejectedByRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ApprovalEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAllEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TransferEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024e3380380620024e38339818101604052810190620000379190620001f6565b8160049081620000489190620004c6565b5080600590816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b611f2680620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342966c6811610097578063a22cb46511610066578063a22cb46514610282578063b88d4fde1461029e578063c87b56dd146102ba578063e985e9c5146102ea576100f5565b806342966c68146101e85780636352211e1461020457806370a082311461023457806395d89b4114610264576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806323b872dd1461019457806340c10f19146101b057806342842e0e146101cc576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f9190611557565b61031a565b604051610121919061159f565b60405180910390f35b6101326103ec565b60405161013f919061164a565b60405180910390f35b610162600480360381019061015d91906116a2565b61047e565b60405161016f9190611710565b60405180910390f35b610192600480360381019061018d9190611757565b6105c4565b005b6101ae60048036038101906101a99190611797565b610712565b005b6101ca60048036038101906101c59190611757565b610854565b005b6101e660048036038101906101e19190611797565b6109fc565b005b61020260048036038101906101fd91906116a2565b610a1c565b005b61021e600480360381019061021991906116a2565b610b83565b60405161022b9190611710565b60405180910390f35b61024e600480360381019061024991906117ea565b610c2a565b60405161025b9190611826565b60405180910390f35b61026c610c73565b604051610279919061164a565b60405180910390f35b61029c6004803603810190610297919061186d565b610d05565b005b6102b860048036038101906102b391906119e2565b610e6d565b005b6102d460048036038101906102cf91906116a2565b610e8b565b6040516102e1919061164a565b60405180910390f35b61030460048036038101906102ff9190611a65565b610f5a565b604051610311919061159f565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600480546103fb90611ad4565b80601f016020809104026020016040519081016040528092919081815260200182805461042790611ad4565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361051c576040517f711ea30a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105ba576040517f6a76b03700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8092505050919050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610660576040517f59dc379f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415801561080c5750600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15610843576040517fb9eee67900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61084e848484610fee565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108eb576040517ea5a1f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461093a9190611b34565b925050819055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167feaf1c4b3ce0f4f62a2bae7eb3e68225c75f7e6ff4422073b7437b9a78d25f170836040516109f09190611826565b60405180910390a35050565b610a1783838360405180602001604052806000815250610e6d565b505050565b6000610a2782610b83565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a8e576040517ff768f7aa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610add9190611b68565b9250508190555060008083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167feaf1c4b3ce0f4f62a2bae7eb3e68225c75f7e6ff4422073b7437b9a78d25f17084604051610b779190611826565b60405180910390a35050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c21576040517f0d7b5c5200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060058054610c8290611ad4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cae90611ad4565b8015610cfb5780601f10610cd057610100808354040283529160200191610cfb565b820191906000526020600020905b815481529060010190602001808311610cde57829003601f168201915b5050505050905090565b60003390508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d6f576040517fad96a4c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f87e3cee377c3fa4779be46681dd00e73cc64a9fa7f172900550261128059391a84604051610e60919061159f565b60405180910390a3505050565b610e78848484610712565b610e8533858585856111c6565b50505050565b6060600080600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f2a576040517ffe20270b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f3383611372565b604051602001610f439190611c24565b604051602081830303815290604052915050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611054576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61105f6000826105c4565b60018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ae9190611b68565b9250508190555060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111049190611b34565b925050819055508160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167feaf1c4b3ce0f4f62a2bae7eb3e68225c75f7e6ff4422073b7437b9a78d25f170836040516111b99190611826565b60405180910390a3505050565b6111cf836114d2565b1561136b578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016112139493929190611c9b565b6020604051808303816000875af192505050801561124f57506040513d601f19601f8201168201806040525081019061124c9190611cfc565b60015b6112eb5761125b611d36565b806308c379a0036112b7575061126f611d58565b8061127a57506112b9565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ae919061164a565b60405180910390fd5b505b6040517f3263996200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611369576040517fc867619500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b5050505050565b6060600082036113b9576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506114cd565b600082905060005b600082146113eb5780806113d490611de8565b915050600a826113e49190611e5f565b91506113c1565b60008167ffffffffffffffff811115611407576114066118b7565b5b6040519080825280601f01601f1916602001820160405280156114395781602001600182028036833780820191505090505b5090505b600085146114c6576001826114529190611b68565b9150600a856114619190611e90565b603061146d9190611b34565b60f81b81838151811061148357611482611ec1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856114bf9190611e5f565b945061143d565b8093505050505b919050565b600080823b905060008163ffffffff1611915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611534816114ff565b811461153f57600080fd5b50565b6000813590506115518161152b565b92915050565b60006020828403121561156d5761156c6114f5565b5b600061157b84828501611542565b91505092915050565b60008115159050919050565b61159981611584565b82525050565b60006020820190506115b46000830184611590565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115f45780820151818401526020810190506115d9565b60008484015250505050565b6000601f19601f8301169050919050565b600061161c826115ba565b61162681856115c5565b93506116368185602086016115d6565b61163f81611600565b840191505092915050565b600060208201905081810360008301526116648184611611565b905092915050565b6000819050919050565b61167f8161166c565b811461168a57600080fd5b50565b60008135905061169c81611676565b92915050565b6000602082840312156116b8576116b76114f5565b5b60006116c68482850161168d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116fa826116cf565b9050919050565b61170a816116ef565b82525050565b60006020820190506117256000830184611701565b92915050565b611734816116ef565b811461173f57600080fd5b50565b6000813590506117518161172b565b92915050565b6000806040838503121561176e5761176d6114f5565b5b600061177c85828601611742565b925050602061178d8582860161168d565b9150509250929050565b6000806000606084860312156117b0576117af6114f5565b5b60006117be86828701611742565b93505060206117cf86828701611742565b92505060406117e08682870161168d565b9150509250925092565b600060208284031215611800576117ff6114f5565b5b600061180e84828501611742565b91505092915050565b6118208161166c565b82525050565b600060208201905061183b6000830184611817565b92915050565b61184a81611584565b811461185557600080fd5b50565b60008135905061186781611841565b92915050565b60008060408385031215611884576118836114f5565b5b600061189285828601611742565b92505060206118a385828601611858565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118ef82611600565b810181811067ffffffffffffffff8211171561190e5761190d6118b7565b5b80604052505050565b60006119216114eb565b905061192d82826118e6565b919050565b600067ffffffffffffffff82111561194d5761194c6118b7565b5b61195682611600565b9050602081019050919050565b82818337600083830152505050565b600061198561198084611932565b611917565b9050828152602081018484840111156119a1576119a06118b2565b5b6119ac848285611963565b509392505050565b600082601f8301126119c9576119c86118ad565b5b81356119d9848260208601611972565b91505092915050565b600080600080608085870312156119fc576119fb6114f5565b5b6000611a0a87828801611742565b9450506020611a1b87828801611742565b9350506040611a2c8782880161168d565b925050606085013567ffffffffffffffff811115611a4d57611a4c6114fa565b5b611a59878288016119b4565b91505092959194509250565b60008060408385031215611a7c57611a7b6114f5565b5b6000611a8a85828601611742565b9250506020611a9b85828601611742565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611aec57607f821691505b602082108103611aff57611afe611aa5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b3f8261166c565b9150611b4a8361166c565b9250828201905080821115611b6257611b61611b05565b5b92915050565b6000611b738261166c565b9150611b7e8361166c565b9250828203905081811115611b9657611b95611b05565b5b92915050565b600081905092915050565b7f68747470733a2f2f6d796170692e636f6d2f746f6b656e2f0000000000000000600082015250565b6000611bdd601883611b9c565b9150611be882611ba7565b601882019050919050565b6000611bfe826115ba565b611c088185611b9c565b9350611c188185602086016115d6565b80840191505092915050565b6000611c2f82611bd0565b9150611c3b8284611bf3565b915081905092915050565b600081519050919050565b600082825260208201905092915050565b6000611c6d82611c46565b611c778185611c51565b9350611c878185602086016115d6565b611c9081611600565b840191505092915050565b6000608082019050611cb06000830187611701565b611cbd6020830186611701565b611cca6040830185611817565b8181036060830152611cdc8184611c62565b905095945050505050565b600081519050611cf68161152b565b92915050565b600060208284031215611d1257611d116114f5565b5b6000611d2084828501611ce7565b91505092915050565b60008160e01c9050919050565b600060033d1115611d555760046000803e611d52600051611d29565b90505b90565b600060443d10611de557611d6a6114eb565b60043d036004823e80513d602482011167ffffffffffffffff82111715611d92575050611de5565b808201805167ffffffffffffffff811115611db05750505050611de5565b80602083010160043d038501811115611dcd575050505050611de5565b611ddc826020018501866118e6565b82955050505050505b90565b6000611df38261166c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e2557611e24611b05565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e6a8261166c565b9150611e758361166c565b925082611e8557611e84611e30565b5b828204905092915050565b6000611e9b8261166c565b9150611ea68361166c565b925082611eb657611eb5611e30565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212202369c1156584d11d1d41b52f5e50971ff52487f4621e506c82f02458e978367c64736f6c63430008120033";

type MyERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyERC721__factory extends ContractFactory {
  constructor(...args: MyERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<MyERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): MyERC721 {
    return super.attach(address) as MyERC721;
  }
  override connect(signer: Signer): MyERC721__factory {
    return super.connect(signer) as MyERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC721Interface {
    return new utils.Interface(_abi) as MyERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyERC721 {
    return new Contract(address, _abi, signerOrProvider) as MyERC721;
  }
}
