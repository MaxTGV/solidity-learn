/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientAllowanceError",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalanceError",
    type: "error",
  },
  {
    inputs: [],
    name: "LockPeriodNotEndedError",
    type: "error",
  },
  {
    inputs: [],
    name: "NoActiveDepositError",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardAlreadyClaimedError",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardNotClaimedError",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmountError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "rewardClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200192c3803806200192c833981810160405281019062000037919062000204565b62000053674b303cf3c4de2a1d60c01b6200015c60201b60201c565b6200006f671194aa0f9639fad360c01b6200015c60201b60201c565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cb670dd496b00f004d7f60c01b6200015c60201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001286793f879dda8a6a08060c01b6200015c60201b60201c565b816002819055506200014b673e4d82d2f177f47e60c01b6200015c60201b60201c565b806003819055505050505062000276565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001918262000164565b9050919050565b620001a38162000184565b8114620001af57600080fd5b50565b600081519050620001c38162000198565b92915050565b6000819050919050565b620001de81620001c9565b8114620001ea57600080fd5b50565b600081519050620001fe81620001d3565b92915050565b600080600080608085870312156200022157620002206200015f565b5b60006200023187828801620001b2565b94505060206200024487828801620001b2565b93505060406200025787828801620001ed565b92505060606200026a87828801620001ed565b91505092959194509250565b6116a680620002866000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b6b55f2511610066578063b6b55f25146100e8578063c89039c514610104578063d2d7231f14610122578063f7c618c114610152578063fc7e286d1461017057610093565b8063372500ab146100985780633ccfd60b146100a25780633fd8b02f146100ac57806352d472eb146100ca575b600080fd5b6100a06101a2565b005b6100aa610558565b005b6100b4610866565b6040516100c191906110b3565b60405180910390f35b6100d261086c565b6040516100df91906110b3565b60405180910390f35b61010260048036038101906100fd91906110ff565b610872565b005b61010c610d0a565b60405161011991906111ab565b60405180910390f35b61013c600480360381019061013791906110ff565b610d2e565b60405161014991906110b3565b60405180910390f35b61015a610d8d565b60405161016791906111ab565b60405180910390f35b61018a60048036038101906101859190611204565b610db3565b6040516101999392919061124c565b60405180910390f35b6101b6670b1c50e8589c9cc060c01b610dea565b6101ca67539d92da24e9589160c01b610dea565b6101de676d04aede8082ccbd60c01b610dea565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061023567cfe6a365e545f8ac60c01b610dea565b61024967d0bd11202fe9fbc860c01b610dea565b60008160000154036102af5761026967a2c3638db53ac8ef60c01b610dea565b61027d67a3623ed98fb1d98260c01b610dea565b6040517f3bdb9bb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102c36706d22552be4d983e60c01b610dea565b6102d76799454e8953aab45360c01b610dea565b6102eb671ad2d0145de88c1f60c01b610dea565b60025481600101546102fd91906112b2565b42101561035e57610318679aef0145edab2d8660c01b610dea565b61032c671bea1e9716b9461a60c01b610dea565b6040517fd9be2ec100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610372676924aef37fbaacf760c01b610dea565b61038667a6c650ddb269c12660c01b610dea565b61039a677024e90a93e1416560c01b610dea565b8060020160009054906101000a900460ff161561040b576103c5677fa8ac733e1a002560c01b610dea565b6103d9675b920c40a4247b1160c01b610dea565b6040517f82e4b30100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041f673a4212de5d01eccd60c01b610dea565b610433674a8f878a8c0a7ab960c01b610dea565b61044767565d7243c757886960c01b610dea565b60006104568260000154610d2e565b905061046c6771418e35d72db97660c01b610dea565b60018260020160006101000a81548160ff02191690831515021790555061049d6712d3b68a57188e1160c01b610dea565b6104b167fa8fd77f79efec7260c01b610dea565b6104de600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610ded565b6104f267947f5da29736722460c01b610dea565b6105066799258021b496707560c01b610dea565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161054c91906110b3565b60405180910390a25050565b61056c67299aaeb16906b59360c01b610dea565b61058067410556df48adce3060c01b610dea565b6105946751d3c9fc6656fb8560c01b610dea565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506105eb67699f26e8ba969b6360c01b610dea565b6105ff67b3a021dfafd432e060c01b610dea565b60008160000154036106655761061f670a5a5a6be38cd77460c01b610dea565b61063367a31516a68a9172e660c01b610dea565b6040517f3bdb9bb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61067967186320f58bdb8d0d60c01b610dea565b61068d677f5438b29593cb8d60c01b610dea565b6106a1676b66fe559d2e2b7060c01b610dea565b8060020160009054906101000a900460ff16610711576106cb6787ad06e8e0218f5a60c01b610dea565b6106df670e361e1c0c70032460c01b610dea565b6040517fd3182ccf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072567925d6d1161ae8e7460c01b610dea565b6107396701590d0abd7be66560c01b610dea565b61074d67a0aaae447f7db8f860c01b610dea565b61077c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338360000154610ded565b610790674855f69202e52e0460c01b610dea565b600081600001819055506107ae67475d941072fbc84d60c01b610dea565b600081600101819055506107cc673e96598e09c049b660c01b610dea565b60008160020160006101000a81548160ff0219169083151502179055506107fd67be78c0f61396694460c01b610dea565b61081167812749e981aef33f60c01b610dea565b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826000015460405161085b91906110b3565b60405180910390a250565b60025481565b60035481565b610886676f3109a87c4a6a0b60c01b610dea565b61089a67b99c039e42a56ea860c01b610dea565b6108ae67862c5c5ed8f05fb660c01b610dea565b60008103610910576108ca67df57f159e82d000a60c01b610dea565b6108de6721fb7ba9fb2afd2660c01b610dea565b6040517f6e0ccc0700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610924678144882322dbd4e860c01b610dea565b6109386711f4505dd0686a4360c01b610dea565b61094c67c586f99379574b1160c01b610dea565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016109a89291906112f5565b602060405180830381865afa1580156109c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e99190611333565b1015610a4857610a036798935776403ca05160c01b610dea565b610a166653ed7e47c8b82560c01b610dea565b6040517f73a74a7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a5c67c459d267a913d84760c01b610dea565b610a70676b84036c817261a860c01b610dea565b610a8467c777926a88189b5c60c01b610dea565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ade9190611360565b602060405180830381865afa158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1f9190611333565b1015610b7f57610b3967d2cf96e53f73c9c460c01b610dea565b610b4d6771b90afc6c48b87e60c01b610dea565b6040517f384d3c5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b93675d14b2e430c8b13a60c01b610dea565b610ba767a4fffc2ad1e81dc760c01b610dea565b610bbb670290f915ff1880aa60c01b610dea565b610be760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610f42565b610bfb6767d1aae2d1cb36b060c01b610dea565b604051806060016040528082815260200142815260200160001515815250600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050610ca3673dc69dd95c34832360c01b610dea565b610cb7670dec32073655cd0060c01b610dea565b3373ffffffffffffffffffffffffffffffffffffffff167f0b05f0d1cd0819f155b8a61f60baf7767c1ee49d04aeaab701df236140eb93f98242604051610cff92919061137b565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d4467a7862e538e22d9b760c01b610dea565b610d5867c2cbf920b608a48c60c01b610dea565b610d6c67606b9c7091ef1fd160c01b610dea565b606460035483610d7c91906113a4565b610d869190611415565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b50565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610e22929190611446565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610e8c91906114e0565b6000604051808303816000865af19150503d8060008114610ec9576040519150601f19603f3d011682016040523d82523d6000602084013e610ece565b606091505b5091509150818015610efc5750600081511480610efb575080806020019051810190610efa9190611523565b5b5b610f3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f32906115ad565b60405180910390fd5b5050505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610f79939291906115cd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610fe391906114e0565b6000604051808303816000865af19150503d8060008114611020576040519150601f19603f3d011682016040523d82523d6000602084013e611025565b606091505b509150915081801561105357506000815114806110525750808060200190518101906110519190611523565b5b5b611092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108990611650565b60405180910390fd5b505050505050565b6000819050919050565b6110ad8161109a565b82525050565b60006020820190506110c860008301846110a4565b92915050565b600080fd5b6110dc8161109a565b81146110e757600080fd5b50565b6000813590506110f9816110d3565b92915050565b600060208284031215611115576111146110ce565b5b6000611123848285016110ea565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061117161116c6111678461112c565b61114c565b61112c565b9050919050565b600061118382611156565b9050919050565b600061119582611178565b9050919050565b6111a58161118a565b82525050565b60006020820190506111c0600083018461119c565b92915050565b60006111d18261112c565b9050919050565b6111e1816111c6565b81146111ec57600080fd5b50565b6000813590506111fe816111d8565b92915050565b60006020828403121561121a576112196110ce565b5b6000611228848285016111ef565b91505092915050565b60008115159050919050565b61124681611231565b82525050565b600060608201905061126160008301866110a4565b61126e60208301856110a4565b61127b604083018461123d565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112bd8261109a565b91506112c88361109a565b92508282019050808211156112e0576112df611283565b5b92915050565b6112ef816111c6565b82525050565b600060408201905061130a60008301856112e6565b61131760208301846112e6565b9392505050565b60008151905061132d816110d3565b92915050565b600060208284031215611349576113486110ce565b5b60006113578482850161131e565b91505092915050565b600060208201905061137560008301846112e6565b92915050565b600060408201905061139060008301856110a4565b61139d60208301846110a4565b9392505050565b60006113af8261109a565b91506113ba8361109a565b92508282026113c88161109a565b915082820484148315176113df576113de611283565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114208261109a565b915061142b8361109a565b92508261143b5761143a6113e6565b5b828204905092915050565b600060408201905061145b60008301856112e6565b61146860208301846110a4565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156114a3578082015181840152602081019050611488565b60008484015250505050565b60006114ba8261146f565b6114c4818561147a565b93506114d4818560208601611485565b80840191505092915050565b60006114ec82846114af565b915081905092915050565b61150081611231565b811461150b57600080fd5b50565b60008151905061151d816114f7565b92915050565b600060208284031215611539576115386110ce565b5b60006115478482850161150e565b91505092915050565b600082825260208201905092915050565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b6000611597600283611550565b91506115a282611561565b602082019050919050565b600060208201905081810360008301526115c68161158a565b9050919050565b60006060820190506115e260008301866112e6565b6115ef60208301856112e6565b6115fc60408301846110a4565b949350505050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b600061163a600383611550565b915061164582611604565b602082019050919050565b600060208201905081810360008301526116698161162d565b905091905056fea264697066735822122082ff46cdccde121b0f9ee0de6c699d0f61a91c61ae3e65c86e6970f0683065e664736f6c63430008120033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _depositToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _rewardPercentage: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _depositToken,
      _rewardToken,
      _lockPeriod,
      _rewardPercentage,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _depositToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _rewardPercentage: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _depositToken,
      _rewardToken,
      _lockPeriod,
      _rewardPercentage,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
