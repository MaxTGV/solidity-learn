/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardPercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientAllowanceError",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalanceError",
    type: "error",
  },
  {
    inputs: [],
    name: "LockPeriodNotEndedError",
    type: "error",
  },
  {
    inputs: [],
    name: "NoActiveDepositError",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardAlreadyClaimedError",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardNotClaimedError",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmountError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "rewardClaimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200192c3803806200192c833981810160405281019062000037919062000204565b6200005367e0fd2f863e44a99a60c01b6200015c60201b60201c565b6200006f671736ca8a5a37f2e260c01b6200015c60201b60201c565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000cb6727f1a84cc44df7ab60c01b6200015c60201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001286743cff0b8b1b2cc3d60c01b6200015c60201b60201c565b816002819055506200014b678e39be8ea85ed2d360c01b6200015c60201b60201c565b806003819055505050505062000276565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001918262000164565b9050919050565b620001a38162000184565b8114620001af57600080fd5b50565b600081519050620001c38162000198565b92915050565b6000819050919050565b620001de81620001c9565b8114620001ea57600080fd5b50565b600081519050620001fe81620001d3565b92915050565b600080600080608085870312156200022157620002206200015f565b5b60006200023187828801620001b2565b94505060206200024487828801620001b2565b93505060406200025787828801620001ed565b92505060606200026a87828801620001ed565b91505092959194509250565b6116a680620002866000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b6b55f2511610066578063b6b55f25146100e8578063c89039c514610104578063d2d7231f14610122578063f7c618c114610152578063fc7e286d1461017057610093565b8063372500ab146100985780633ccfd60b146100a25780633fd8b02f146100ac57806352d472eb146100ca575b600080fd5b6100a06101a2565b005b6100aa610558565b005b6100b4610865565b6040516100c191906110b3565b60405180910390f35b6100d261086b565b6040516100df91906110b3565b60405180910390f35b61010260048036038101906100fd91906110ff565b610871565b005b61010c610d0a565b60405161011991906111ab565b60405180910390f35b61013c600480360381019061013791906110ff565b610d2e565b60405161014991906110b3565b60405180910390f35b61015a610d8d565b60405161016791906111ab565b60405180910390f35b61018a60048036038101906101859190611204565b610db3565b6040516101999392919061124c565b60405180910390f35b6101b66799ad139291a5835460c01b610dea565b6101ca67ab8d93da1edec96c60c01b610dea565b6101de6780ab09a548b335e560c01b610dea565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610235677785d7074eca32e660c01b610dea565b61024967b940a1a3270987c360c01b610dea565b60008160000154036102af57610269674cc2a455ac72a7e860c01b610dea565b61027d67ec9fe6ca1b8ab8b960c01b610dea565b6040517f3bdb9bb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102c36732c640c534e6176b60c01b610dea565b6102d76704b71fa95a8b65ab60c01b610dea565b6102eb671bfc2118bc25ee8760c01b610dea565b60025481600101546102fd91906112b2565b42101561035e576103186702f93e706d984f1f60c01b610dea565b61032c67d328ada47f1b8f4160c01b610dea565b6040517fd9be2ec100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103726765c5033e8f866f6c60c01b610dea565b610386672721032dc439e5a460c01b610dea565b61039a6710fe6cb6dfe9eadd60c01b610dea565b8060020160009054906101000a900460ff161561040b576103c56708628fb3c483210160c01b610dea565b6103d967be6841900a1ba01a60c01b610dea565b6040517f82e4b30100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041f67668d5ba210e09a5b60c01b610dea565b610433674e1f6c88a11d3b0760c01b610dea565b61044767664f442849d5313a60c01b610dea565b60006104568260000154610d2e565b905061046c6742dddb8dc7f2793e60c01b610dea565b60018260020160006101000a81548160ff02191690831515021790555061049d67280836c03a67daef60c01b610dea565b6104b1675d7bbe15f21c772560c01b610dea565b6104de600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610ded565b6104f267028ef4be670178c560c01b610dea565b610506678929d79e3be964a160c01b610dea565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161054c91906110b3565b60405180910390a25050565b61056c67172e9fcca90f19cc60c01b610dea565b610580673ec3ab0eb994e35760c01b610dea565b61059467b0a951b522f30fca60c01b610dea565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506105eb67dedd9fb0e75bef4c60c01b610dea565b6105ff6715cd517528cae0a560c01b610dea565b60008160000154036106655761061f67e2e39936eacf972060c01b610dea565b61063367b932072a7c44517160c01b610dea565b6040517f3bdb9bb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61067967864962714fea1c0a60c01b610dea565b61068d67c2aa83c38540102260c01b610dea565b6106a167614b360aacc841c760c01b610dea565b8060020160009054906101000a900460ff16610711576106cb67c751293ea04919ba60c01b610dea565b6106df674cfccfbd0235a77b60c01b610dea565b6040517fd3182ccf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61072567af972de0f3cdce7a60c01b610dea565b610739670313e422b3aec67560c01b610dea565b61074d67bcdec8c3ae66954360c01b610dea565b61077c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338360000154610ded565b610790676307596b3dfafb7060c01b610dea565b600081600001819055506107ae67ad114efe3273f7ec60c01b610dea565b600081600101819055506107cc67a6f47e48746bd84c60c01b610dea565b60008160020160006101000a81548160ff0219169083151502179055506107fd676937982067d8555760c01b610dea565b610810663662574f395ec660c01b610dea565b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826000015460405161085a91906110b3565b60405180910390a250565b60025481565b60035481565b61088567bd1d5d536a95647260c01b610dea565b61089967e673aff4896ea2ad60c01b610dea565b6108ad6718219e1f6a3f274360c01b610dea565b6000810361090f576108c9670dbfafd4c733fbbd60c01b610dea565b6108dd670846602b8427f62f60c01b610dea565b6040517f6e0ccc0700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61092367f29cb65f3c4bea6f60c01b610dea565b61093767e51fd728558557d660c01b610dea565b61094b67c4258c960f51a09b60c01b610dea565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016109a79291906112f5565b602060405180830381865afa1580156109c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e89190611333565b1015610a4857610a0267a83a380498062d9460c01b610dea565b610a1667f3fb846e7b762f3460c01b610dea565b6040517f73a74a7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a5c673d44f92383e4481560c01b610dea565b610a70675afb8555d99529c060c01b610dea565b610a84678cc2f8820ca181ae60c01b610dea565b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ade9190611360565b602060405180830381865afa158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1f9190611333565b1015610b7f57610b3967a2a0bdb70924843160c01b610dea565b610b4d67b718fd6dc2ee301960c01b610dea565b6040517f384d3c5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b93676e8aed6df490a47060c01b610dea565b610ba76734a6a18c00f7149160c01b610dea565b610bbb67f871b1fe4dd14f8160c01b610dea565b610be760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610f42565b610bfb675268e2691e86373360c01b610dea565b604051806060016040528082815260200142815260200160001515815250600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050610ca36701c0986d11e8cff360c01b610dea565b610cb7670fe8c6d8740aa85660c01b610dea565b3373ffffffffffffffffffffffffffffffffffffffff167f0b05f0d1cd0819f155b8a61f60baf7767c1ee49d04aeaab701df236140eb93f98242604051610cff92919061137b565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d4467fa4d1d27acfef6f260c01b610dea565b610d5867c19b6de02eee638560c01b610dea565b610d6c67da52de2e108a864460c01b610dea565b606460035483610d7c91906113a4565b610d869190611415565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b50565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610e22929190611446565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610e8c91906114e0565b6000604051808303816000865af19150503d8060008114610ec9576040519150601f19603f3d011682016040523d82523d6000602084013e610ece565b606091505b5091509150818015610efc5750600081511480610efb575080806020019051810190610efa9190611523565b5b5b610f3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f32906115ad565b60405180910390fd5b5050505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610f79939291906115cd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610fe391906114e0565b6000604051808303816000865af19150503d8060008114611020576040519150601f19603f3d011682016040523d82523d6000602084013e611025565b606091505b509150915081801561105357506000815114806110525750808060200190518101906110519190611523565b5b5b611092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108990611650565b60405180910390fd5b505050505050565b6000819050919050565b6110ad8161109a565b82525050565b60006020820190506110c860008301846110a4565b92915050565b600080fd5b6110dc8161109a565b81146110e757600080fd5b50565b6000813590506110f9816110d3565b92915050565b600060208284031215611115576111146110ce565b5b6000611123848285016110ea565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061117161116c6111678461112c565b61114c565b61112c565b9050919050565b600061118382611156565b9050919050565b600061119582611178565b9050919050565b6111a58161118a565b82525050565b60006020820190506111c0600083018461119c565b92915050565b60006111d18261112c565b9050919050565b6111e1816111c6565b81146111ec57600080fd5b50565b6000813590506111fe816111d8565b92915050565b60006020828403121561121a576112196110ce565b5b6000611228848285016111ef565b91505092915050565b60008115159050919050565b61124681611231565b82525050565b600060608201905061126160008301866110a4565b61126e60208301856110a4565b61127b604083018461123d565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112bd8261109a565b91506112c88361109a565b92508282019050808211156112e0576112df611283565b5b92915050565b6112ef816111c6565b82525050565b600060408201905061130a60008301856112e6565b61131760208301846112e6565b9392505050565b60008151905061132d816110d3565b92915050565b600060208284031215611349576113486110ce565b5b60006113578482850161131e565b91505092915050565b600060208201905061137560008301846112e6565b92915050565b600060408201905061139060008301856110a4565b61139d60208301846110a4565b9392505050565b60006113af8261109a565b91506113ba8361109a565b92508282026113c88161109a565b915082820484148315176113df576113de611283565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114208261109a565b915061142b8361109a565b92508261143b5761143a6113e6565b5b828204905092915050565b600060408201905061145b60008301856112e6565b61146860208301846110a4565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156114a3578082015181840152602081019050611488565b60008484015250505050565b60006114ba8261146f565b6114c4818561147a565b93506114d4818560208601611485565b80840191505092915050565b60006114ec82846114af565b915081905092915050565b61150081611231565b811461150b57600080fd5b50565b60008151905061151d816114f7565b92915050565b600060208284031215611539576115386110ce565b5b60006115478482850161150e565b91505092915050565b600082825260208201905092915050565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b6000611597600283611550565b91506115a282611561565b602082019050919050565b600060208201905081810360008301526115c68161158a565b9050919050565b60006060820190506115e260008301866112e6565b6115ef60208301856112e6565b6115fc60408301846110a4565b949350505050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b600061163a600383611550565b915061164582611604565b602082019050919050565b600060208201905081810360008301526116698161162d565b905091905056fea264697066735822122053153a9328e16436ed40e4c30f65feade8f44ccb02c8eff4e37771e880d0483964736f6c63430008120033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _depositToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _rewardPercentage: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _depositToken,
      _rewardToken,
      _lockPeriod,
      _rewardPercentage,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _depositToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _lockPeriod: PromiseOrValue<BigNumberish>,
    _rewardPercentage: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _depositToken,
      _rewardToken,
      _lockPeriod,
      _rewardPercentage,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
