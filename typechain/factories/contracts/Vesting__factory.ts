/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Vesting, VestingInterface } from "../../contracts/Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vestingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DistributePeriodOver",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRightsDistributed",
    type: "error",
  },
  {
    inputs: [],
    name: "RightsAlreadyDistributed",
    type: "error",
  },
  {
    inputs: [],
    name: "VestingNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "VestingPeriodOver",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmountError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RightsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "DISTRIBUTE_RIGHTS_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTING_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeRights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAvailableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "releasePercentageByMonth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vestingInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "distributed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200198538038062001985833981810160405281019062000037919062000350565b620000576200004b6200021760201b60201c565b6200021f60201b60201c565b62000073670bbee2d4af510e4660c01b620002e360201b60201c565b6200008f67099c952709680bc460c01b620002e360201b60201c565b6201518042620000a09190620003bb565b600481905550620000c267bfc04d4f6d38df5160c01b620002e360201b60201c565b6293a800600454620000d59190620003bb565b600581905550620000f7672b862e03aba9bf4060c01b620002e360201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200015467cc2fb54a4a6b8f0460c01b620002e360201b60201c565b600a6003600060018152602001908152602001600020819055506200018a6773ebaf8d5e52695e60c01b620002e360201b60201c565b601e600360006002815260200190815260200160002081905550620001c067a0f33338bb95cc7d60c01b620002e360201b60201c565b6032600360006003815260200190815260200160002081905550620001f66784308826266cc76460c01b620002e360201b60201c565b606460036000600481526020019081526020016000208190555050620003f6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200031882620002eb565b9050919050565b6200032a816200030b565b81146200033657600080fd5b50565b6000815190506200034a816200031f565b92915050565b600060208284031215620003695762000368620002e6565b5b6000620003798482850162000339565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620003c88262000382565b9150620003d58362000382565b9250828201905080821115620003f057620003ef6200038c565b5b92915050565b61157f80620004066000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806386fab45e1161008c578063a8660a7811610066578063a8660a78146101dc578063e24ac66d146101fa578063f2fde38b14610218578063f78e633d14610234576100cf565b806386fab45e146101965780638d8f2adb146101b45780638da5cb5b146101be576100cf565b806319d152fa146100d45780631f3a71ba146100f257806329e1e280146101225780634cfc4d3014610152578063715018a61461017057806374a56e1f1461017a575b600080fd5b6100dc610265565b6040516100e99190610fc5565b60405180910390f35b61010c60048036038101906101079190611023565b61028b565b6040516101199190611069565b60405180910390f35b61013c600480360381019061013791906110b0565b610540565b6040516101499190611069565b60405180910390f35b61015a610558565b6040516101679190611069565b60405180910390f35b61017861055f565b005b610194600480360381019061018f91906110dd565b6105e7565b005b61019e610a0c565b6040516101ab9190611069565b60405180910390f35b6101bc610a12565b005b6101c6610bc4565b6040516101d3919061112c565b60405180910390f35b6101e4610bed565b6040516101f19190611069565b60405180910390f35b610202610bf3565b60405161020f9190611069565b60405180910390f35b610232600480360381019061022d9190611023565b610bfa565b005b61024e60048036038101906102499190611023565b610cf1565b60405161025c929190611162565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102a1675629f87c68eb343c60c01b610d22565b6102b567ec72b7ec253b805460c01b610d22565b6102c967355409d97aef210660c01b610d22565b60045442101561032d576102e767ddd92511284fa0d860c01b610d22565b6102fb67d98a0ab91c239b7a60c01b610d22565b6040517f35549be800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103416777f627d0ee32de6260c01b610d22565b61035567332818205d3e3d8e60c01b610d22565b610369677c957409074d02e860c01b610d22565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001540361040d576103c7670415d9978206962a60c01b610d22565b6103db67aad5432e5cfbe27660c01b610d22565b6040517fe293fd6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61042167632629a4f4fdff4660c01b610d22565b61043567f0b0b3446fba5f3960c01b610d22565b610449677a0c12b52adf65c660c01b610d22565b600062278d006004544261045d91906111ba565b610467919061121d565b905061047d6722f852daa914efc160c01b610d22565b610491675138b9bf5c12ea2a60c01b610d22565b60006064600360006001856104a6919061124e565b815260200190815260200160002054600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546105029190611282565b61050c919061121d565b9050610522678d44ca463d59fb4260c01b610d22565b61053667dc05ea5889a2f66e60c01b610d22565b8092505050919050565b60036020528060005260406000206000915090505481565b6293a80081565b610567610d25565b73ffffffffffffffffffffffffffffffffffffffff16610585610bc4565b73ffffffffffffffffffffffffffffffffffffffff16146105db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d290611321565b60405180910390fd5b6105e56000610d2d565b565b6105fb67be11f747a52ecdf860c01b610d22565b610603610d25565b73ffffffffffffffffffffffffffffffffffffffff16610621610bc4565b73ffffffffffffffffffffffffffffffffffffffff1614610677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066e90611321565b60405180910390fd5b61068b67629a9ac53d1f32bd60c01b610d22565b61069f67b25dfeca19ee97ee60c01b610d22565b6106b367c4918de222cf2e7460c01b610d22565b6106c76758fcf9143df4e00660c01b610d22565b60045442111561072b576106e567636e45ac1fc889a460c01b610d22565b6106f9677b1536c9b5ec41dc60c01b610d22565b6040517f2742f6e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61073f67f524c873519cdd9160c01b610d22565b610753675da21d2a2ce2a9e060c01b610d22565b6107676707e072274752fcb960c01b610d22565b600081036107c9576107836716caa395c0061b2960c01b610d22565b61079767f89514430195fd9f60c01b610d22565b6040517f6e0ccc0700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107dd67fded96fd65605d7560c01b610d22565b6107f1675eba6c971e80847d60c01b610d22565b61080567aaa177fea1b76bd860c01b610d22565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16156108b45761086e67c14e5a400c1e312f60c01b610d22565b6108826758569387f23cf66060c01b610d22565b6040517f6b05e89300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108c867416c201e0165c38660c01b610d22565b6108dc6755879249a49298d360c01b610d22565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506109376738c311ec1e8ca41660c01b610d22565b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055506109a667b9ce142754fa029960c01b610d22565b6109ba67a4c2accb0408858860c01b610d22565b8173ffffffffffffffffffffffffffffffffffffffff167f2ef4b79db08d5b9133b3407e7550851510485871e56619e6301f35679090015e82604051610a009190611069565b60405180910390a25050565b60055481565b610a26677ecbebb08b3c41c560c01b610d22565b610a3a678a3117c2482445f860c01b610d22565b610a4e6759e7d5c7ca719b5e60c01b610d22565b6000339050610a67679d6bdb747e4b91fe60c01b610d22565b610a7b6783e5adb0a5b1a90860c01b610d22565b6000610a868261028b565b9050610a9c67ebc7d0140aea369b60c01b610d22565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610aee91906111ba565b92505081905550610b09671162fe6ba530b3de60c01b610d22565b610b1d67b9e729b22fb6ba8260c01b610d22565b610b4a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610df1565b610b5e677604f593839d143b60c01b610d22565b610b7267974630cd67d9965560c01b610d22565b8173ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b82604051610bb89190611069565b60405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b6201518081565b610c02610d25565b73ffffffffffffffffffffffffffffffffffffffff16610c20610bc4565b73ffffffffffffffffffffffffffffffffffffffff1614610c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6d90611321565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ce5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdc906113b3565b60405180910390fd5b610cee81610d2d565b50565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610e269291906113d3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610e90919061146d565b6000604051808303816000865af19150503d8060008114610ecd576040519150601f19603f3d011682016040523d82523d6000602084013e610ed2565b606091505b5091509150818015610f005750600081511480610eff575080806020019051810190610efe91906114b0565b5b5b610f3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3690611529565b60405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f8b610f86610f8184610f46565b610f66565b610f46565b9050919050565b6000610f9d82610f70565b9050919050565b6000610faf82610f92565b9050919050565b610fbf81610fa4565b82525050565b6000602082019050610fda6000830184610fb6565b92915050565b600080fd5b6000610ff082610f46565b9050919050565b61100081610fe5565b811461100b57600080fd5b50565b60008135905061101d81610ff7565b92915050565b60006020828403121561103957611038610fe0565b5b60006110478482850161100e565b91505092915050565b6000819050919050565b61106381611050565b82525050565b600060208201905061107e600083018461105a565b92915050565b61108d81611050565b811461109857600080fd5b50565b6000813590506110aa81611084565b92915050565b6000602082840312156110c6576110c5610fe0565b5b60006110d48482850161109b565b91505092915050565b600080604083850312156110f4576110f3610fe0565b5b60006111028582860161100e565b92505060206111138582860161109b565b9150509250929050565b61112681610fe5565b82525050565b6000602082019050611141600083018461111d565b92915050565b60008115159050919050565b61115c81611147565b82525050565b6000604082019050611177600083018561105a565b6111846020830184611153565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111c582611050565b91506111d083611050565b92508282039050818111156111e8576111e761118b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061122882611050565b915061123383611050565b925082611243576112426111ee565b5b828204905092915050565b600061125982611050565b915061126483611050565b925082820190508082111561127c5761127b61118b565b5b92915050565b600061128d82611050565b915061129883611050565b92508282026112a681611050565b915082820484148315176112bd576112bc61118b565b5b5092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061130b6020836112c4565b9150611316826112d5565b602082019050919050565b6000602082019050818103600083015261133a816112fe565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061139d6026836112c4565b91506113a882611341565b604082019050919050565b600060208201905081810360008301526113cc81611390565b9050919050565b60006040820190506113e8600083018561111d565b6113f5602083018461105a565b9392505050565b600081519050919050565b600081905092915050565b60005b83811015611430578082015181840152602081019050611415565b60008484015250505050565b6000611447826113fc565b6114518185611407565b9350611461818560208601611412565b80840191505092915050565b6000611479828461143c565b915081905092915050565b61148d81611147565b811461149857600080fd5b50565b6000815190506114aa81611484565b92915050565b6000602082840312156114c6576114c5610fe0565b5b60006114d48482850161149b565b91505092915050565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b60006115136002836112c4565b915061151e826114dd565b602082019050919050565b6000602082019050818103600083015261154281611506565b905091905056fea26469706673582212202470e0114d9cb1e573b679d199db79c3ac6d40737ec3ede14bf8c01ff7f0cc8564736f6c63430008120033";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vestingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vesting> {
    return super.deploy(_vestingToken, overrides || {}) as Promise<Vesting>;
  }
  override getDeployTransaction(
    _vestingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vestingToken, overrides || {});
  }
  override attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  override connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
