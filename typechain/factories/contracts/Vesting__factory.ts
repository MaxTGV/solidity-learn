/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Vesting, VestingInterface } from "../../contracts/Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vestingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DistributePeriodOver",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRightsDistributed",
    type: "error",
  },
  {
    inputs: [],
    name: "RightsAlreadyDistributed",
    type: "error",
  },
  {
    inputs: [],
    name: "VestingNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "VestingPeriodOver",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmountError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RightsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "DISTRIBUTE_RIGHTS_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VESTING_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeRights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getAvailableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "releasePercentageByMonth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vestingInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "distributed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015393803806200153983398181016040528101906200003791906200026d565b620000576200004b6200013760201b60201c565b6200013f60201b60201c565b6201518042620000689190620002d8565b6004819055506293a800600454620000819190620002d8565b60058190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a600360006001815260200190815260200160002081905550601e600360006002815260200190815260200160002081905550603260036000600381526020019081526020016000208190555060646003600060048152602001908152602001600020819055505062000313565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002358262000208565b9050919050565b620002478162000228565b81146200025357600080fd5b50565b60008151905062000267816200023c565b92915050565b60006020828403121562000286576200028562000203565b5b6000620002968482850162000256565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620002e5826200029f565b9150620002f2836200029f565b92508282019050808211156200030d576200030c620002a9565b5b92915050565b61121680620003236000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806386fab45e1161008c578063a8660a7811610066578063a8660a78146101dc578063e24ac66d146101fa578063f2fde38b14610218578063f78e633d14610234576100cf565b806386fab45e146101965780638d8f2adb146101b45780638da5cb5b146101be576100cf565b806319d152fa146100d45780631f3a71ba146100f257806329e1e280146101225780634cfc4d3014610152578063715018a61461017057806374a56e1f1461017a575b600080fd5b6100dc610266565b6040516100e99190610c4e565b60405180910390f35b61010c60048036038101906101079190610cac565b61028c565b6040516101199190610cf2565b60405180910390f35b61013c60048036038101906101379190610d39565b610446565b6040516101499190610cf2565b60405180910390f35b61015a61045e565b6040516101679190610cf2565b60405180910390f35b610178610465565b005b610194600480360381019061018f9190610d66565b6104ed565b005b61019e61075a565b6040516101ab9190610cf2565b60405180910390f35b6101bc610760565b005b6101c661084a565b6040516101d39190610db5565b60405180910390f35b6101e4610873565b6040516101f19190610cf2565b60405180910390f35b610202610879565b60405161020f9190610cf2565b60405180910390f35b610232600480360381019061022d9190610cac565b610880565b005b61024e60048036038101906102499190610cac565b610977565b60405161025d93929190610deb565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006004544210156102ca576040517f35549be800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015403610346576040517fe293fd6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600062278d006004544261035a9190610e51565b6103649190610eb4565b90506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905060006064600360006001876104099190610ee5565b81526020019081526020016000205483856104249190610e51565b61042e9190610f19565b6104389190610eb4565b905080945050505050919050565b60036020528060005260406000206000915090505481565b6293a80081565b61046d6109ae565b73ffffffffffffffffffffffffffffffffffffffff1661048b61084a565b73ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890610fb8565b60405180910390fd5b6104eb60006109b6565b565b6104f56109ae565b73ffffffffffffffffffffffffffffffffffffffff1661051361084a565b73ffffffffffffffffffffffffffffffffffffffff1614610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090610fb8565b60405180910390fd5b6004544211156105a5576040517f2742f6e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081036105df576040517f6e0ccc0700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610666576040517f6b05e89300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f2ef4b79db08d5b9133b3407e7550851510485871e56619e6301f35679090015e8260405161074e9190610cf2565b60405180910390a25050565b60055481565b600033905060006107708261028c565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546107c49190610ee5565b925050819055506107f8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610a7a565b8173ffffffffffffffffffffffffffffffffffffffff167f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b8260405161083e9190610cf2565b60405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b6201518081565b6108886109ae565b73ffffffffffffffffffffffffffffffffffffffff166108a661084a565b73ffffffffffffffffffffffffffffffffffffffff16146108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f390610fb8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061104a565b60405180910390fd5b610974816109b6565b50565b60026020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401610aaf92919061106a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b199190611104565b6000604051808303816000865af19150503d8060008114610b56576040519150601f19603f3d011682016040523d82523d6000602084013e610b5b565b606091505b5091509150818015610b895750600081511480610b88575080806020019051810190610b879190611147565b5b5b610bc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbf906111c0565b60405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c14610c0f610c0a84610bcf565b610bef565b610bcf565b9050919050565b6000610c2682610bf9565b9050919050565b6000610c3882610c1b565b9050919050565b610c4881610c2d565b82525050565b6000602082019050610c636000830184610c3f565b92915050565b600080fd5b6000610c7982610bcf565b9050919050565b610c8981610c6e565b8114610c9457600080fd5b50565b600081359050610ca681610c80565b92915050565b600060208284031215610cc257610cc1610c69565b5b6000610cd084828501610c97565b91505092915050565b6000819050919050565b610cec81610cd9565b82525050565b6000602082019050610d076000830184610ce3565b92915050565b610d1681610cd9565b8114610d2157600080fd5b50565b600081359050610d3381610d0d565b92915050565b600060208284031215610d4f57610d4e610c69565b5b6000610d5d84828501610d24565b91505092915050565b60008060408385031215610d7d57610d7c610c69565b5b6000610d8b85828601610c97565b9250506020610d9c85828601610d24565b9150509250929050565b610daf81610c6e565b82525050565b6000602082019050610dca6000830184610da6565b92915050565b60008115159050919050565b610de581610dd0565b82525050565b6000606082019050610e006000830186610ce3565b610e0d6020830185610ce3565b610e1a6040830184610ddc565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e5c82610cd9565b9150610e6783610cd9565b9250828203905081811115610e7f57610e7e610e22565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ebf82610cd9565b9150610eca83610cd9565b925082610eda57610ed9610e85565b5b828204905092915050565b6000610ef082610cd9565b9150610efb83610cd9565b9250828201905080821115610f1357610f12610e22565b5b92915050565b6000610f2482610cd9565b9150610f2f83610cd9565b9250828202610f3d81610cd9565b91508282048414831517610f5457610f53610e22565b5b5092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610fa2602083610f5b565b9150610fad82610f6c565b602082019050919050565b60006020820190508181036000830152610fd181610f95565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611034602683610f5b565b915061103f82610fd8565b604082019050919050565b6000602082019050818103600083015261106381611027565b9050919050565b600060408201905061107f6000830185610da6565b61108c6020830184610ce3565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156110c75780820151818401526020810190506110ac565b60008484015250505050565b60006110de82611093565b6110e8818561109e565b93506110f88185602086016110a9565b80840191505092915050565b600061111082846110d3565b915081905092915050565b61112481610dd0565b811461112f57600080fd5b50565b6000815190506111418161111b565b92915050565b60006020828403121561115d5761115c610c69565b5b600061116b84828501611132565b91505092915050565b7f5354000000000000000000000000000000000000000000000000000000000000600082015250565b60006111aa600283610f5b565b91506111b582611174565b602082019050919050565b600060208201905081810360008301526111d98161119d565b905091905056fea2646970667358221220126bf21787a802a316b69784381721f99868e8e7e25005c1faa37ecd9591016964736f6c63430008120033";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vestingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vesting> {
    return super.deploy(_vestingToken, overrides || {}) as Promise<Vesting>;
  }
  override getDeployTransaction(
    _vestingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vestingToken, overrides || {});
  }
  override attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  override connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
